# 工作流名称，会出现在 GitHub 仓库的 Actions 选项栏中
name: Deploy my blog

# 指定工作流的触发事件，此处为 push 事件，表示在本地 push 指定分支至 github 仓库时触发工作流
on:
  push:
    branches:
      # 指定通过push触发工作流时的分支
      - main

# jobs 表示将当前“部署文档”工作流的所有任务分组在一起，并定义一个名为 deploy-gh-pages 的任务
jobs:
  deploy-gh-pages:
    # 配置任务运行在最新的 Ubuntu Linux 运行器
    runs-on: ubuntu-latest
    # steps 表示将 deploy-gh-pages 任务下的所有步骤分为一组，嵌套的每一个条目都是一个独立的 action 或者 shell 脚本
    steps:
      - name: Checkout
        # uses 表示当前步骤使用 actions/checkout 动作的v3大版本 ，这是一个可以检出仓库代码到运行器的动作，它允许你运行脚本或者其他动作侵入你的代码（比如构建或者测试工具）
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # 如果你文档需要 Git 子模块，取消注释下一行
          # submodules: true

      # 安装指定版本的 Node.js，让后续步骤可使用 npm 和 node 命令
      - name: install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Mirror the Github organization repos to Gitee.
        uses: Yikun/hub-mirror-action@master
        with:
          src: 'github/yangchunjian'                            # 这里改为自己github账号名称，如github/yangchunjian
          dst: 'gitee/yangchunjian'                            # 这里改为gitee上账号名称，如gitee/yangchunjian
          dst_key: ${{ secrets.GITEE_PRIVATE_KEY20230718 }}    # 这是生成的私钥，下面第3步会讲
          dst_token: ${{ secrets.GITEE_TOKEN20230718 }}        # 这是gitee上生成的token，下面会讲
          force_update: true
          static_list: "ujava"                    # 同步的仓库名称，这里为JavaInterview，意思是会自动同步该仓库到gitee下同名仓库
          debug: true

      - name: Build docs
        env:
          NODE_OPTIONS: --max_old_space_size=8192
        run: |-
          npm run docs:build
          > docs/.vuepress/dist/.nojekyll

      - name: Deploy docs
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }} # 也就是我们刚才生成的 secret
          # 设置部署文档所在的分支名称
          branch: gh-pages
          # 所部署文档的目录
          folder: docs/.vuepress/dist


