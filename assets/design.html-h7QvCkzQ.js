const e=JSON.parse('{"key":"v-229a7adf","path":"/highfreq/design.html","title":"系统设计原则","lang":"zh-CN","frontmatter":{"title":"系统设计原则","icon":"laptop-code","category":["设计高频"],"tag":["高频"],"description":"简介 好的系统是迭代出来的。先解决核心问题，预测未来可能出现的问题，对现有的问题有方案，对未来的问题有预案。不是一上来就按1亿用户量设计，也不要过度复杂化系统。 业务千变万化，技术层出不穷，设计理念也是百花齐放，看起来似乎很难有一套通用的规范来适用所有的架构设计场景。但是总是有一些原则是可以通用的。 在设计系统时，应该多思考墨菲定律: 任何事情都没有表面看起来那么简单 所有的事情都会比你预计的时间长 可能会出错的事一定会出错 如果你担心某种情况发生，那么它就更有可能发生","head":[["meta",{"property":"og:url","content":"https://ujava.cn/highfreq/design.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"系统设计原则"}],["meta",{"property":"og:description","content":"简介 好的系统是迭代出来的。先解决核心问题，预测未来可能出现的问题，对现有的问题有方案，对未来的问题有预案。不是一上来就按1亿用户量设计，也不要过度复杂化系统。 业务千变万化，技术层出不穷，设计理念也是百花齐放，看起来似乎很难有一套通用的规范来适用所有的架构设计场景。但是总是有一些原则是可以通用的。 在设计系统时，应该多思考墨菲定律: 任何事情都没有表面看起来那么简单 所有的事情都会比你预计的时间长 可能会出错的事一定会出错 如果你担心某种情况发生，那么它就更有可能发生"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-03T03:00:03.000Z"}],["meta",{"property":"article:author","content":"UJava"}],["meta",{"property":"article:tag","content":"高频"}],["meta",{"property":"article:modified_time","content":"2024-03-03T03:00:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"系统设计原则\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-03T03:00:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"UJava\\",\\"url\\":\\"https://ujava.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"一、系统的技术设计原则","slug":"一、系统的技术设计原则","link":"#一、系统的技术设计原则","children":[{"level":3,"title":"1.1.高并发原则","slug":"_1-1-高并发原则","link":"#_1-1-高并发原则","children":[]},{"level":3,"title":"1.2.高可用原则","slug":"_1-2-高可用原则","link":"#_1-2-高可用原则","children":[]}]},{"level":2,"title":"二、业务设计原则","slug":"二、业务设计原则","link":"#二、业务设计原则","children":[{"level":3,"title":"2.1.防重、幂等","slug":"_2-1-防重、幂等","link":"#_2-1-防重、幂等","children":[]},{"level":3,"title":"2.2.模块复用","slug":"_2-2-模块复用","link":"#_2-2-模块复用","children":[]},{"level":3,"title":"2.3.可追溯","slug":"_2-3-可追溯","link":"#_2-3-可追溯","children":[]},{"level":3,"title":"2.4.反馈原则","slug":"_2-4-反馈原则","link":"#_2-4-反馈原则","children":[]},{"level":3,"title":"2.5.流程可定义","slug":"_2-5-流程可定义","link":"#_2-5-流程可定义","children":[]},{"level":3,"title":"2.6.系统审批化","slug":"_2-6-系统审批化","link":"#_2-6-系统审批化","children":[]},{"level":3,"title":"2.7.文档和注释","slug":"_2-7-文档和注释","link":"#_2-7-文档和注释","children":[]},{"level":3,"title":"2.8.备份","slug":"_2-8-备份","link":"#_2-8-备份","children":[]},{"level":3,"title":"2.9.规范","slug":"_2-9-规范","link":"#_2-9-规范","children":[]}]},{"level":2,"title":"三、系统性能常见指标","slug":"三、系统性能常见指标","link":"#三、系统性能常见指标","children":[{"level":3,"title":"3.1.响应时间（Response time）","slug":"_3-1-响应时间-response-time","link":"#_3-1-响应时间-response-time","children":[]},{"level":3,"title":"3.2.吞吐量（Throughput）","slug":"_3-2-吞吐量-throughput","link":"#_3-2-吞吐量-throughput","children":[]},{"level":3,"title":"3.3.资源使用率（Resource utilization）","slug":"_3-3-资源使用率-resource-utilization","link":"#_3-3-资源使用率-resource-utilization","children":[]},{"level":3,"title":"3.4.点击数（Hits per second）","slug":"_3-4-点击数-hits-per-second","link":"#_3-4-点击数-hits-per-second","children":[]},{"level":3,"title":"3.3.并发用户数（Concurrent users）","slug":"_3-3-并发用户数-concurrent-users","link":"#_3-3-并发用户数-concurrent-users","children":[]}]},{"level":2,"title":"四、总结","slug":"四、总结","link":"#四、总结","children":[]}],"git":{"createdTime":1700217282000,"updatedTime":1709434803000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":4}]},"readingTime":{"minutes":15.33,"words":4599},"filePathRelative":"highfreq/design.md","localizedDate":"2023年11月17日","excerpt":"<h2> 简介</h2>\\n<p>好的系统是迭代出来的。先解决核心问题，预测未来可能出现的问题，对现有的问题有方案，对未来的问题有预案。不是一上来就按1亿用户量设计，也不要过度复杂化系统。</p>\\n<p>业务千变万化，技术层出不穷，设计理念也是百花齐放，看起来似乎很难有一套通用的规范来适用所有的架构设计场景。但是总是有一些原则是可以通用的。</p>\\n<p>在设计系统时，应该多思考墨菲定律:</p>\\n<ul>\\n<li>任何事情都没有表面看起来那么简单</li>\\n<li>所有的事情都会比你预计的时间长</li>\\n<li>可能会出错的事一定会出错</li>\\n<li>如果你担心某种情况发生，那么它就更有可能发生</li>\\n</ul>","copyright":{"author":"UJava(ujava.cn)","license":"MIT"},"autoDesc":true}');export{e as data};
