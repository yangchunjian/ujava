const e=JSON.parse('{"key":"v-a9d6ff5c","path":"/design/create/prototype.html","title":"原型模式","lang":"zh-CN","frontmatter":{"title":"原型模式","index":false,"icon":"laptop-code","category":["设计模式"],"description":"概述 原型设计模式允许通过复制现有对象来创建新对象，而不是通过实例化类来创建新对象。 在需要创建大量相似对象时非常有用，它可以避免重复创建对象，从而提高性能，并且可以根据需要实现浅拷贝或深拷贝。 在Java中，原型模式的实现通常涉及到实现Cloneable接口和重写clone()方法。","head":[["meta",{"property":"og:url","content":"https://ujava.cn/design/create/prototype.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"原型模式"}],["meta",{"property":"og:description","content":"概述 原型设计模式允许通过复制现有对象来创建新对象，而不是通过实例化类来创建新对象。 在需要创建大量相似对象时非常有用，它可以避免重复创建对象，从而提高性能，并且可以根据需要实现浅拷贝或深拷贝。 在Java中，原型模式的实现通常涉及到实现Cloneable接口和重写clone()方法。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-07T12:01:12.000Z"}],["meta",{"property":"article:author","content":"ujava"}],["meta",{"property":"article:modified_time","content":"2023-10-07T12:01:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"原型模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-07T12:01:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ujava\\",\\"url\\":\\"https://ujava.cn\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]}],"git":{"createdTime":1696680072000,"updatedTime":1696680072000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":1}]},"readingTime":{"minutes":0.43,"words":130},"filePathRelative":"design/create/prototype.md","localizedDate":"2023年10月7日","autoDesc":true}');export{e as data};
