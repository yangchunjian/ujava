const t=JSON.parse('{"key":"v-758d694a","path":"/design/action/responsibility.html","title":"责任链模式","lang":"zh-CN","frontmatter":{"title":"责任链模式","index":false,"icon":"laptop-code","category":["设计模式"],"description":"概述 责任链模式是一种行为设计模式，它允许将请求沿着处理链进行传递，直到有一个处理程序处理它为止。在Java中实现责任链模式通常需要以下几个步骤： 定义一个处理器接口，该接口包含一个处理请求的方法。; 创建一个抽象处理器类，它实现处理器接口，并包含一个指向下一个处理器的引用。; 创建具体的处理器类，它们继承自抽象处理器类，并实现处理请求的方法。; 在客...","head":[["meta",{"property":"og:url","content":"https://ujava.cn/design/action/responsibility.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"责任链模式"}],["meta",{"property":"og:description","content":"概述 责任链模式是一种行为设计模式，它允许将请求沿着处理链进行传递，直到有一个处理程序处理它为止。在Java中实现责任链模式通常需要以下几个步骤： 定义一个处理器接口，该接口包含一个处理请求的方法。; 创建一个抽象处理器类，它实现处理器接口，并包含一个指向下一个处理器的引用。; 创建具体的处理器类，它们继承自抽象处理器类，并实现处理请求的方法。; 在客..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-26T10:05:54.000Z"}],["meta",{"property":"article:author","content":"ujava"}],["meta",{"property":"article:modified_time","content":"2023-09-26T10:05:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"责任链模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-26T10:05:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ujava\\",\\"url\\":\\"https://ujava.cn\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]}],"git":{"createdTime":1695722754000,"updatedTime":1695722754000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":1}]},"readingTime":{"minutes":0.65,"words":196},"filePathRelative":"design/action/responsibility.md","localizedDate":"2023年9月26日","autoDesc":true}');export{t as data};
