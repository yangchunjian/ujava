const t=JSON.parse('{"key":"v-2f5a97d8","path":"/principle/seven.html","title":"设计原理:如何表达和维护大型逻辑","lang":"zh-CN","frontmatter":{"title":"设计原理:如何表达和维护大型逻辑","index":false,"icon":"laptop-code","category":["设计原理"],"description":"简介 让我们暂时撇开平台、框架、技术、设计模式、对象思想、敏捷开发论等。 追问程序本质。 从本质上来说， 程序就是一系列有序执行的指令集合。 如何将指令集合组织成可靠可用可信赖的软件（美妙的逻辑之塔）， 这是个问题。 程序 = 逻辑 + 控制。 what to do + when to do. 从编程角度来说， 开发者应对的就是逻辑， 逻辑的表达、组织...","head":[["meta",{"property":"og:url","content":"https://ujava.cn/principle/seven.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"设计原理:如何表达和维护大型逻辑"}],["meta",{"property":"og:description","content":"简介 让我们暂时撇开平台、框架、技术、设计模式、对象思想、敏捷开发论等。 追问程序本质。 从本质上来说， 程序就是一系列有序执行的指令集合。 如何将指令集合组织成可靠可用可信赖的软件（美妙的逻辑之塔）， 这是个问题。 程序 = 逻辑 + 控制。 what to do + when to do. 从编程角度来说， 开发者应对的就是逻辑， 逻辑的表达、组织..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-02T09:59:55.000Z"}],["meta",{"property":"article:author","content":"ujava"}],["meta",{"property":"article:modified_time","content":"2023-11-02T09:59:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设计原理:如何表达和维护大型逻辑\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-02T09:59:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ujava\\",\\"url\\":\\"https://ujava.cn\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]}],"git":{"createdTime":1698919195000,"updatedTime":1698919195000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":1}]},"readingTime":{"minutes":15.53,"words":4659},"filePathRelative":"principle/seven.md","localizedDate":"2023年11月2日","autoDesc":true}');export{t as data};
