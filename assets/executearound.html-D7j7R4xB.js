import{_ as a,o,c as r,b as e}from"./app-C4XGxaon.js";const n={};function c(i,t){return o(),r("div",null,t[0]||(t[0]=[e("h2",{id:"概述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#概述"},[e("span",null,"概述")])],-1),e("p",null,"环绕执行模式(Execute Around)惯用语将用户从某些操作中解放出来，这些操作应始终在业务方法之前和之后执行。一个很好的例子是资源分配和解除分配，让用户只指定如何处理资源。",-1)]))}const l=a(n,[["render",c],["__file","executearound.html.vue"]]),d=JSON.parse('{"path":"/design/other/executearound.html","title":"环绕执行模式","lang":"zh-CN","frontmatter":{"title":"环绕执行模式","icon":"laptop-code","category":["设计模式"],"tag":["设计模式"],"description":"概述 环绕执行模式(Execute Around)惯用语将用户从某些操作中解放出来，这些操作应始终在业务方法之前和之后执行。一个很好的例子是资源分配和解除分配，让用户只指定如何处理资源。","head":[["meta",{"property":"og:url","content":"https://ujava.cn/design/other/executearound.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"环绕执行模式"}],["meta",{"property":"og:description","content":"概述 环绕执行模式(Execute Around)惯用语将用户从某些操作中解放出来，这些操作应始终在业务方法之前和之后执行。一个很好的例子是资源分配和解除分配，让用户只指定如何处理资源。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-03T03:36:58.000Z"}],["meta",{"property":"article:author","content":"UJava"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:modified_time","content":"2024-03-03T03:36:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"环绕执行模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-03T03:36:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"UJava\\",\\"url\\":\\"https://ujava.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]}],"git":{"createdTime":1709437018000,"updatedTime":1709437018000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":1}]},"readingTime":{"minutes":0.31,"words":94},"filePathRelative":"design/other/executearound.md","localizedDate":"2024年3月3日","excerpt":"<h2>概述</h2>\\n<p>环绕执行模式(Execute Around)惯用语将用户从某些操作中解放出来，这些操作应始终在业务方法之前和之后执行。一个很好的例子是资源分配和解除分配，让用户只指定如何处理资源。</p>\\n","autoDesc":true}');export{l as comp,d as data};
