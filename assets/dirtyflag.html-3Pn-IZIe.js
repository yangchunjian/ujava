import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{o,c as n,a as e,b as t}from"./app-QQNUC0Nt.js";const r={},s=e("h2",{id:"概述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#概述","aria-hidden":"true"},"#"),t(" 概述")],-1),a=e("p",null,[t("脏标志行为模式允许您避免无论如何都需要再次执行的昂贵操作。这是一个简单的模式，实际上只是解释了如何向类添加一个布尔值，您可以在属性更改时设置该值。这将使您的班级知道，它之前可能计算过的任何结果都需要在请求时再次计算。重新计算结果后，可以清除布尔值。"),e("br"),t(" 在深入研究使用此模式之前，需要考虑一些要点：")],-1),c=e("p",null,"您需要考虑一些事项：",-1),_=e("ul",null,[e("li",null,"（1） 您需要它吗？当要计算的结果难以计算或需要大量资源计算时，此设计模式非常有效。你想保存它们。您也不想连续多次计算它们，而只有最后一个才算数。"),e("li",null,"（2） 什么时候设置脏标志？确保每当重要属性发生更改时，在类本身中设置 dirty 标志。此属性应影响计算结果的结果，并且通过更改属性，使最后一个结果无效。"),e("li",null,"（3） 你什么时候清除脏标志？每当使用最新信息计算结果时，都应该清除脏标志，这似乎是显而易见的，但有时您可能希望清除该标志。")],-1),i=[s,a,c,_];function d(h,u){return o(),n("div",null,i)}const p=l(r,[["render",d],["__file","dirtyflag.html.vue"]]);export{p as default};
