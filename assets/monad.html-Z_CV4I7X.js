const t=JSON.parse('{"key":"v-8eaa30fe","path":"/design/other/monad.html","title":"单体(monad)模式","lang":"zh-CN","frontmatter":{"title":"单体(monad)模式","icon":"laptop-code","category":["设计模式"],"tag":["设计模式"],"description":"概述 基于线性代数的单子模式代表了将运算逐步链接在一起的方式。绑定函数可以描述为基于“相同类型”合约将一个人的输出传递给另一个人的输入。 从形式上讲，monad 由一个类型构造函数 M 和两个操作组成： bind - 将 monadic 对象和一个函数从普通对象转换为 monadic 值并返回 monadic value return - 它接受普通类型对象并返回包装在 monadic 值中的此对象。","head":[["meta",{"property":"og:url","content":"https://ujava.cn/design/other/monad.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"单体(monad)模式"}],["meta",{"property":"og:description","content":"概述 基于线性代数的单子模式代表了将运算逐步链接在一起的方式。绑定函数可以描述为基于“相同类型”合约将一个人的输出传递给另一个人的输入。 从形式上讲，monad 由一个类型构造函数 M 和两个操作组成： bind - 将 monadic 对象和一个函数从普通对象转换为 monadic 值并返回 monadic value return - 它接受普通类型对象并返回包装在 monadic 值中的此对象。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-04T01:48:41.000Z"}],["meta",{"property":"article:author","content":"ujava"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:modified_time","content":"2024-03-04T01:48:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"单体(monad)模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-04T01:48:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ujava\\",\\"url\\":\\"https://ujava.cn\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]}],"git":{"createdTime":1709516921000,"updatedTime":1709516921000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":1}]},"readingTime":{"minutes":0.51,"words":153},"filePathRelative":"design/other/monad.md","localizedDate":"2024年3月4日","excerpt":"<h2> 概述</h2>\\n<p>基于线性代数的单子模式代表了将运算逐步链接在一起的方式。绑定函数可以描述为基于“相同类型”合约将一个人的输出传递给另一个人的输入。</p>\\n<p>从形式上讲，monad 由一个类型构造函数 M 和两个操作组成：</p>\\n<ul>\\n<li>bind - 将 monadic 对象和一个函数从普通对象转换为 monadic 值并返回 monadic value</li>\\n<li>return - 它接受普通类型对象并返回包装在 monadic 值中的此对象。</li>\\n</ul>\\n","copyright":{"author":"UJava(ujava.cn)","license":"MIT"},"autoDesc":true}');export{t as data};
