import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as e,c as o,a as t,b as n,d as p,e as r}from"./app-8a5cd404.js";const c={},i={href:"https://www.nowcoder.com/exam/oj?page=1&tab=SQL%E7%AF%87&topicId=240",target:"_blank",rel:"noopener noreferrer"},l=r(`<h2 id="增删改操作" tabindex="-1"><a class="header-anchor" href="#增删改操作" aria-hidden="true">#</a> 增删改操作</h2><p>SQL 插入记录的方式汇总：</p><ul><li><strong>普通插入（全字段）</strong> ：<code>INSERT INTO table_name VALUES (value1, value2, ...)</code></li><li><strong>普通插入（限定字段）</strong> ：<code>INSERT INTO table_name (column1, column2, ...) VALUES (value1, value2, ...)</code></li><li><strong>多条一次性插入</strong> ：<code>INSERT INTO table_name (column1, column2, ...) VALUES (value1_1, value1_2, ...), (value2_1, value2_2, ...), ...</code></li><li><strong>从另一个表导入</strong> ：<code>INSERT INTO table_name SELECT * FROM table_name2 [WHERE key=value]</code></li><li><strong>带更新的插入</strong> ：<code>REPLACE INTO table_name VALUES (value1, value2, ...)</code>（注意这种原理是检测到主键或唯一性索引键重复就删除原记录后重新插入）</li></ul><h3 id="插入记录-一" tabindex="-1"><a class="header-anchor" href="#插入记录-一" aria-hidden="true">#</a> 插入记录（一）</h3><p><strong>描述</strong>：牛客后台会记录每个用户的试卷作答记录到 <code>exam_record</code> 表，现在有两个用户的作答记录详情如下：</p><ul><li>用户 1001 在 2021 年 9 月 1 日晚上 10 点 11 分 12 秒开始作答试卷 9001，并在 50 分钟后提交，得了 90 分；</li><li>用户 1002 在 2021 年 9 月 4 日上午 7 点 1 分 2 秒开始作答试卷 9002，并在 10 分钟后退出了平台。</li></ul><p>试卷作答记录表<code>exam_record</code>中，表已建好，其结构如下，请用一条语句将这两条记录插入表中。</p><table><thead><tr><th>Filed</th><th>Type</th><th>Null</th><th>Key</th><th>Extra</th><th>Default</th><th>Comment</th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>auto_increment</td><td>(NULL)</td><td>自增 ID</td></tr><tr><td>uid</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>用户 ID</td></tr><tr><td>exam_id</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>试卷 ID</td></tr><tr><td>start_time</td><td>datetime</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>开始时间</td></tr><tr><td>submit_time</td><td>datetime</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>提交时间</td></tr><tr><td>score</td><td>tinyint(4)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>得分</td></tr></tbody></table><p><strong>答案</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">// 存在自增主键，无需手动赋值</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> exam_record <span class="token punctuation">(</span>uid<span class="token punctuation">,</span> exam_id<span class="token punctuation">,</span> start_time<span class="token punctuation">,</span> submit_time<span class="token punctuation">,</span> score<span class="token punctuation">)</span> <span class="token keyword">VALUES</span>
<span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span> <span class="token number">9001</span><span class="token punctuation">,</span> <span class="token string">&#39;2021-09-01 22:11:12&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2021-09-01 23:01:12&#39;</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">1002</span><span class="token punctuation">,</span> <span class="token number">9002</span><span class="token punctuation">,</span> <span class="token string">&#39;2021-09-04 07:01:02&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="插入记录-二" tabindex="-1"><a class="header-anchor" href="#插入记录-二" aria-hidden="true">#</a> 插入记录（二）</h3><p><strong>描述</strong>：现有一张试卷作答记录表<code>exam_record</code>，结构如下表，其中包含多年来的用户作答试卷记录，由于数据越来越多，维护难度越来越大，需要对数据表内容做精简，历史数据做备份。</p><p>表<code>exam_record</code>：</p><table><thead><tr><th>Filed</th><th>Type</th><th>Null</th><th>Key</th><th>Extra</th><th>Default</th><th>Comment</th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>auto_increment</td><td>(NULL)</td><td>自增 ID</td></tr><tr><td>uid</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>用户 ID</td></tr><tr><td>exam_id</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>试卷 ID</td></tr><tr><td>start_time</td><td>datetime</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>开始时间</td></tr><tr><td>submit_time</td><td>datetime</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>提交时间</td></tr><tr><td>score</td><td>tinyint(4)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>得分</td></tr></tbody></table><p>我们已经创建了一张新表<code>exam_record_before_2021</code>用来备份 2021 年之前的试题作答记录，结构和<code>exam_record</code>表一致，请将 2021 年之前的已完成了的试题作答纪录导入到该表。</p><p><strong>答案</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> exam_record_before_2021 <span class="token punctuation">(</span>uid<span class="token punctuation">,</span> exam_id<span class="token punctuation">,</span> start_time<span class="token punctuation">,</span> submit_time<span class="token punctuation">,</span> score<span class="token punctuation">)</span>
<span class="token keyword">SELECT</span> uid<span class="token punctuation">,</span>exam_id<span class="token punctuation">,</span>start_time<span class="token punctuation">,</span>submit_time<span class="token punctuation">,</span>score
<span class="token keyword">FROM</span> exam_record
<span class="token keyword">WHERE</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span>submit_time<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2021</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="插入记录-三" tabindex="-1"><a class="header-anchor" href="#插入记录-三" aria-hidden="true">#</a> 插入记录（三）</h3><p><strong>描述</strong>：现在有一套 ID 为 9003 的高难度 SQL 试卷，时长为一个半小时，请你将 2021-01-01 00:00:00 作为发布时间插入到试题信息表<code>examination_info</code>，不管该 ID 试卷是否存在，都要插入成功，请尝试插入它。</p><p>试题信息表<code>examination_info</code>：</p><table><thead><tr><th>Filed</th><th>Type</th><th>Null</th><th>Key</th><th>Extra</th><th>Default</th><th>Comment</th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>auto_increment</td><td>(NULL)</td><td>自增 ID</td></tr><tr><td>exam_id</td><td>int(11)</td><td>NO</td><td>UNI</td><td></td><td>(NULL)</td><td>试卷 ID</td></tr><tr><td>tag</td><td>varchar(32)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>类别标签</td></tr><tr><td>difficulty</td><td>varchar(8)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>难度</td></tr><tr><td>duration</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>时长(分钟数)</td></tr><tr><td>release_time</td><td>datetime</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>发布时间</td></tr></tbody></table><p><strong>答案</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">REPLACE</span> <span class="token keyword">INTO</span> examination_info <span class="token keyword">VALUES</span>
 <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token number">9003</span><span class="token punctuation">,</span> <span class="token string">&quot;SQL&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hard&quot;</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token string">&quot;2021-01-01 00:00:00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="更新记录-一" tabindex="-1"><a class="header-anchor" href="#更新记录-一" aria-hidden="true">#</a> 更新记录（一）</h3><p><strong>描述</strong>：现在有一张试卷信息表 <code>examination_info</code>, 表结构如下图所示：</p><table><thead><tr><th>Filed</th><th>Type</th><th>Null</th><th>Key</th><th>Extra</th><th>Default</th><th>Comment</th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>auto_increment</td><td>(NULL)</td><td>自增 ID</td></tr><tr><td>exam_id</td><td>int(11)</td><td>NO</td><td>UNI</td><td></td><td>(NULL)</td><td>试卷 ID</td></tr><tr><td>tag</td><td>char(32)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>类别标签</td></tr><tr><td>difficulty</td><td>char(8)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>难度</td></tr><tr><td>duration</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>时长</td></tr><tr><td>release_time</td><td>datetime</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>发布时间</td></tr></tbody></table><p>请把<strong>examination_info</strong>表中<code>tag</code>为<code>PYTHON</code>的<code>tag</code>字段全部修改为<code>Python</code>。</p><p><strong>思路</strong>：这题有两种解题思路，最容易想到的是直接<code>update + where</code>来指定条件更新，第二种就是根据要修改的字段进行查找替换</p><p><strong>答案一</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> examination_info <span class="token keyword">SET</span> tag <span class="token operator">=</span> <span class="token string">&#39;Python&#39;</span> <span class="token keyword">WHERE</span> tag<span class="token operator">=</span><span class="token string">&#39;PYTHON&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>答案二</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> examination_info
<span class="token keyword">SET</span> tag <span class="token operator">=</span> <span class="token keyword">REPLACE</span><span class="token punctuation">(</span>tag<span class="token punctuation">,</span><span class="token string">&#39;PYTHON&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Python&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># REPLACE (目标字段，&quot;查找内容&quot;,&quot;替换内容&quot;)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="更新记录-二" tabindex="-1"><a class="header-anchor" href="#更新记录-二" aria-hidden="true">#</a> 更新记录（二）</h3><p><strong>描述</strong>：现有一张试卷作答记录表 exam_record，其中包含多年来的用户作答试卷记录，结构如下表：作答记录表 <code>exam_record</code>： <strong><code>submit_time</code></strong> 为 完成时间 （注意这句话）</p><table><thead><tr><th>Filed</th><th>Type</th><th>Null</th><th>Key</th><th>Extra</th><th>Default</th><th>Comment</th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>auto_increment</td><td>(NULL)</td><td>自增 ID</td></tr><tr><td>uid</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>用户 ID</td></tr><tr><td>exam_id</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>试卷 ID</td></tr><tr><td>start_time</td><td>datetime</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>开始时间</td></tr><tr><td>submit_time</td><td>datetime</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>提交时间</td></tr><tr><td>score</td><td>tinyint(4)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>得分</td></tr></tbody></table><p><strong>题目要求</strong>：请把 <code>exam_record</code> 表中 2021 年 9 月 1 日<mark>之前</mark>开始作答的<mark>未完成</mark>记录全部改为被动完成，即：将完成时间改为&#39;2099-01-01 00:00:00&#39;，分数改为 0。</p><p><strong>思路</strong>：注意题干中的关键字(已经高亮) <code>&quot; xxx 时间 &quot;</code>之前这个条件， 那么这里马上就要想到要进行时间的比较 可以直接 <code>xxx_time &lt; &quot;2021-09-01 00:00:00&quot;,</code> 也可以采用<code>date()</code>函数来进行比较；第二个条件就是 <code>&quot;未完成&quot;</code>， 即完成时间为 NULL，也就是题目中的提交时间 ----- <code>submit_time 为 NULL</code>。</p><p><strong>答案</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> exam_record <span class="token keyword">SET</span> submit_time <span class="token operator">=</span> <span class="token string">&#39;2099-01-01 00:00:00&#39;</span><span class="token punctuation">,</span> score <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">WHERE</span> <span class="token keyword">DATE</span><span class="token punctuation">(</span>start_time<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token string">&quot;2021-09-01&quot;</span> <span class="token operator">AND</span> submit_time <span class="token operator">IS</span> <span class="token boolean">null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="删除记录-一" tabindex="-1"><a class="header-anchor" href="#删除记录-一" aria-hidden="true">#</a> 删除记录（一）</h3><p><strong>描述</strong>：现有一张试卷作答记录表 <code>exam_record</code>，其中包含多年来的用户作答试卷记录，结构如下表：</p><p>作答记录表<code>exam_record：</code> <strong><code>start_time</code></strong> 是试卷开始时间<code>submit_time</code> 是交卷，即结束时间。</p><table><thead><tr><th>Filed</th><th>Type</th><th>Null</th><th>Key</th><th>Extra</th><th>Default</th><th>Comment</th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>auto_increment</td><td>(NULL)</td><td>自增 ID</td></tr><tr><td>uid</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>用户 ID</td></tr><tr><td>exam_id</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>试卷 ID</td></tr><tr><td>start_time</td><td>datetime</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>开始时间</td></tr><tr><td>submit_time</td><td>datetime</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>提交时间</td></tr><tr><td>score</td><td>tinyint(4)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>得分</td></tr></tbody></table><p><strong>要求</strong>：请删除<code>exam_record</code>表中作答时间小于 5 分钟整且分数不及格（及格线为 60 分）的记录；</p><p><strong>思路</strong>：这一题虽然是练习删除，仔细看确是考察对时间函数的用法，这里提及的分钟数比较，常用的函数有 <strong><code>TIMEDIFF</code><strong>和</strong><code>TIMESTAMPDIFF</code></strong> ，两者用法稍有区别，后者更为灵活，这都是看个人习惯。</p><p>1.　 <code>TIMEDIFF</code>：两个时间之间的差值</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>TIMEDIFF<span class="token punctuation">(</span>time1<span class="token punctuation">,</span> time2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>两者参数都是必须的，都是一个时间或者日期时间表达式。如果指定的参数不合法或者是 NULL，那么函数将返回 NULL。</p><p>对于这题而言，可以用在 minute 函数里面，因为 TIMEDIFF 计算出来的是时间的差值，在外面套一个 MINUTE 函数，计算出来的就是分钟数。</p><ol start="2"><li><code>TIMESTAMPDIFF</code>：用于计算两个日期的时间差</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>TIMESTAMPDIFF<span class="token punctuation">(</span>unit<span class="token punctuation">,</span>datetime_expr1<span class="token punctuation">,</span>datetime_expr2<span class="token punctuation">)</span>
<span class="token comment"># 参数说明</span>
<span class="token comment">#unit: 日期比较返回的时间差单位，常用可选值如下:</span>
<span class="token keyword">SECOND</span>：秒
<span class="token keyword">MINUTE</span>：分钟
<span class="token keyword">HOUR</span>：小时
<span class="token keyword">DAY</span>：天
WEEK：星期
<span class="token keyword">MONTH</span>：月
QUARTER：季度
<span class="token keyword">YEAR</span>：年
<span class="token comment"># TIMESTAMPDIFF函数返回datetime_expr2 - datetime_expr1的结果（人话： 后面的 - 前面的  即2-1），其中datetime_expr1和datetime_expr2可以是DATE或DATETIME类型值（人话：可以是“2023-01-01”， 也可以是“2023-01-01- 00:00:00”）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这题需要进行分钟的比较，那么就是 TIMESTAMPDIFF(MINUTE, 开始时间， 结束时间) &lt; 5</p><p><strong>答案</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> exam_record <span class="token keyword">WHERE</span> <span class="token keyword">MINUTE</span> <span class="token punctuation">(</span>TIMEDIFF<span class="token punctuation">(</span>submit_time <span class="token punctuation">,</span> start_time<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token operator">AND</span> score <span class="token operator">&lt;</span> <span class="token number">60</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> exam_record <span class="token keyword">WHERE</span> TIMESTAMPDIFF<span class="token punctuation">(</span><span class="token keyword">MINUTE</span><span class="token punctuation">,</span> start_time<span class="token punctuation">,</span> submit_time<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token operator">AND</span> score <span class="token operator">&lt;</span> <span class="token number">60</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="删除记录-二" tabindex="-1"><a class="header-anchor" href="#删除记录-二" aria-hidden="true">#</a> 删除记录（二）</h3><p><strong>描述</strong>：现有一张试卷作答记录表<code>exam_record</code>，其中包含多年来的用户作答试卷记录，结构如下表：</p><p>作答记录表<code>exam_record</code>：<code>start_time</code> 是试卷开始时间，<code>submit_time</code> 是交卷时间，即结束时间，如果未完成的话，则为空。</p><table><thead><tr><th>Filed</th><th>Type</th><th style="text-align:center;">Null</th><th>Key</th><th>Extra</th><th>Default</th><th>Comment</th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td style="text-align:center;">NO</td><td>PRI</td><td>auto_increment</td><td>(NULL)</td><td>自增 ID</td></tr><tr><td>uid</td><td>int(11)</td><td style="text-align:center;">NO</td><td></td><td></td><td>(NULL)</td><td>用户 ID</td></tr><tr><td>exam_id</td><td>int(11)</td><td style="text-align:center;">NO</td><td></td><td></td><td>(NULL)</td><td>试卷 ID</td></tr><tr><td>start_time</td><td>datetime</td><td style="text-align:center;">NO</td><td></td><td></td><td>(NULL)</td><td>开始时间</td></tr><tr><td>submit_time</td><td>datetime</td><td style="text-align:center;">YES</td><td></td><td></td><td>(NULL)</td><td>提交时间</td></tr><tr><td>score</td><td>tinyint(4)</td><td style="text-align:center;">YES</td><td></td><td></td><td>(NULL)</td><td>分数</td></tr></tbody></table><p><strong>要求</strong>：请删除<code>exam_record</code>表中未完成作答<mark>或</mark>作答时间小于 5 分钟整的记录中，开始作答时间最早的 3 条记录。</p><p><strong>思路</strong>：这题比较简单，但是要注意题干中给出的信息，结束时间，如果未完成的话，则为空，这个其实就是一个条件</p><p>还有一个条件就是小于 5 分钟，跟上题类似，但是这里是<strong>或</strong>，即两个条件满足一个就行；另外就是稍微考察到了排序和 limit 的用法。</p><p><strong>答案</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> exam_record <span class="token keyword">WHERE</span> submit_time <span class="token operator">IS</span> <span class="token boolean">null</span> <span class="token operator">OR</span> TIMESTAMPDIFF<span class="token punctuation">(</span><span class="token keyword">MINUTE</span><span class="token punctuation">,</span> start_time<span class="token punctuation">,</span> submit_time<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">5</span>
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> start_time
<span class="token keyword">LIMIT</span> <span class="token number">3</span>
<span class="token comment"># 默认就是asc， desc是降序排列</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除记录-三" tabindex="-1"><a class="header-anchor" href="#删除记录-三" aria-hidden="true">#</a> 删除记录（三）</h3><p><strong>描述</strong>：现有一张试卷作答记录表 exam_record，其中包含多年来的用户作答试卷记录，结构如下表：</p><table><thead><tr><th>Filed</th><th>Type</th><th style="text-align:center;">Null</th><th>Key</th><th>Extra</th><th>Default</th><th>Comment</th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td style="text-align:center;">NO</td><td>PRI</td><td>auto_increment</td><td>(NULL)</td><td>自增 ID</td></tr><tr><td>uid</td><td>int(11)</td><td style="text-align:center;">NO</td><td></td><td></td><td>(NULL)</td><td>用户 ID</td></tr><tr><td>exam_id</td><td>int(11)</td><td style="text-align:center;">NO</td><td></td><td></td><td>(NULL)</td><td>试卷 ID</td></tr><tr><td>start_time</td><td>datetime</td><td style="text-align:center;">NO</td><td></td><td></td><td>(NULL)</td><td>开始时间</td></tr><tr><td>submit_time</td><td>datetime</td><td style="text-align:center;">YES</td><td></td><td></td><td>(NULL)</td><td>提交时间</td></tr><tr><td>score</td><td>tinyint(4)</td><td style="text-align:center;">YES</td><td></td><td></td><td>(NULL)</td><td>分数</td></tr></tbody></table><p><strong>要求</strong>：请删除<code>exam_record</code>表中所有记录，<mark>并重置自增主键</mark></p><p><strong>思路</strong>：这题考察对三种删除语句的区别，注意高亮部分，要求重置主键；</p><ul><li><code>DROP</code>: 清空表，删除表结构，不可逆</li><li><code>TRUNCATE</code>: 格式化表，不删除表结构，不可逆</li><li><code>DELETE</code>：删除数据，可逆</li></ul><p>这里选用<code>TRUNCATE</code>的原因是：TRUNCATE 只能作用于表；<code>TRUNCATE</code>会清空表中的所有行，但表结构及其约束、索引等保持不变；<code>TRUNCATE</code>会重置表的自增值；使用<code>TRUNCATE</code>后会使表和索引所占用的空间会恢复到初始大小。</p><p>这题也可以采用<code>DELETE</code>来做，但是在删除后，还需要手动<code>ALTER</code>表结构来设置主键初始值；</p><p>同理也可以采用<code>DROP</code>来做，直接删除整张表，包括表结构，然后再新建表即可。</p><p><strong>答案</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">TRUNCATE</span>  exam_record<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="表与索引操作" tabindex="-1"><a class="header-anchor" href="#表与索引操作" aria-hidden="true">#</a> 表与索引操作</h2><h3 id="创建一张新表" tabindex="-1"><a class="header-anchor" href="#创建一张新表" aria-hidden="true">#</a> 创建一张新表</h3><p><strong>描述</strong>：现有一张用户信息表，其中包含多年来在平台注册过的用户信息，随着牛客平台的不断壮大，用户量飞速增长，为了高效地为高活跃用户提供服务，现需要将部分用户拆分出一张新表。</p><p>原来的用户信息表：</p><table><thead><tr><th>Filed</th><th>Type</th><th>Null</th><th>Key</th><th>Default</th><th>Extra</th><th>Comment</th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>(NULL)</td><td>auto_increment</td><td>自增 ID</td></tr><tr><td>uid</td><td>int(11)</td><td>NO</td><td>UNI</td><td>(NULL)</td><td></td><td>用户 ID</td></tr><tr><td>nick_name</td><td>varchar(64)</td><td>YES</td><td></td><td>(NULL)</td><td></td><td>昵称</td></tr><tr><td>achievement</td><td>int(11)</td><td>YES</td><td></td><td>0</td><td></td><td>成就值</td></tr><tr><td>level</td><td>int(11)</td><td>YES</td><td></td><td>(NULL)</td><td></td><td>用户等级</td></tr><tr><td>job</td><td>varchar(32)</td><td>YES</td><td></td><td>(NULL)</td><td></td><td>职业方向</td></tr><tr><td>register_time</td><td>datetime</td><td>YES</td><td></td><td>CURRENT_TIMESTAMP</td><td></td><td>注册时间</td></tr></tbody></table><p>作为数据分析师，请<strong>创建一张优质用户信息表 user_info_vip</strong>，表结构和用户信息表一致。</p><p>你应该返回的输出如下表格所示，请写出建表语句将表格中所有限制和说明记录到表里。</p><table><thead><tr><th>Filed</th><th>Type</th><th>Null</th><th>Key</th><th>Default</th><th>Extra</th><th>Comment</th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>(NULL)</td><td>auto_increment</td><td>自增 ID</td></tr><tr><td>uid</td><td>int(11)</td><td>NO</td><td>UNI</td><td>(NULL)</td><td></td><td>用户 ID</td></tr><tr><td>nick_name</td><td>varchar(64)</td><td>YES</td><td></td><td>(NULL)</td><td></td><td>昵称</td></tr><tr><td>achievement</td><td>int(11)</td><td>YES</td><td></td><td>0</td><td></td><td>成就值</td></tr><tr><td>level</td><td>int(11)</td><td>YES</td><td></td><td>(NULL)</td><td></td><td>用户等级</td></tr><tr><td>job</td><td>varchar(32)</td><td>YES</td><td></td><td>(NULL)</td><td></td><td>职业方向</td></tr><tr><td>register_time</td><td>datetime</td><td>YES</td><td></td><td>CURRENT_TIMESTAMP</td><td></td><td>注册时间</td></tr></tbody></table><p><strong>思路</strong>：如果这题给出了旧表的名称，可直接<code>create table 新表 as select * from 旧表;</code> 但是这题并没有给出旧表名称，所以需要自己创建，注意默认值和键的创建即可，比较简单。（注意：如果是在牛客网上面执行，请注意 comment 中要和题目中的 comment 保持一致，包括大小写，否则不通过，还有字符也要设置）</p><p>答案：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> user_info_vip<span class="token punctuation">(</span>
    id <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span><span class="token string">&#39;自增ID&#39;</span><span class="token punctuation">,</span>
    uid <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">UNIQUE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;用户ID&#39;</span><span class="token punctuation">,</span>
    nick_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span><span class="token string">&#39;昵称&#39;</span><span class="token punctuation">,</span>
    achievement <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;成就值&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">level</span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;用户等级&#39;</span><span class="token punctuation">,</span>
    job <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;职业方向&#39;</span><span class="token punctuation">,</span>
    register_time <span class="token keyword">DATETIME</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;注册时间&#39;</span>
<span class="token punctuation">)</span><span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> UTF8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改表" tabindex="-1"><a class="header-anchor" href="#修改表" aria-hidden="true">#</a> 修改表</h3><p><strong>描述</strong>： 现有一张用户信息表<code>user_info</code>，其中包含多年来在平台注册过的用户信息。</p><p><strong>用户信息表 <code>user_info</code>：</strong></p><table><thead><tr><th>Filed</th><th>Type</th><th>Null</th><th>Key</th><th>Default</th><th>Extra</th><th>Comment</th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>(NULL)</td><td>auto_increment</td><td>自增 ID</td></tr><tr><td>uid</td><td>int(11)</td><td>NO</td><td>UNI</td><td>(NULL)</td><td></td><td>用户 ID</td></tr><tr><td>nick_name</td><td>varchar(64)</td><td>YES</td><td></td><td>(NULL)</td><td></td><td>昵称</td></tr><tr><td>achievement</td><td>int(11)</td><td>YES</td><td></td><td>0</td><td></td><td>成就值</td></tr><tr><td>level</td><td>int(11)</td><td>YES</td><td></td><td>(NULL)</td><td></td><td>用户等级</td></tr><tr><td>job</td><td>varchar(32)</td><td>YES</td><td></td><td>(NULL)</td><td></td><td>职业方向</td></tr><tr><td>register_time</td><td>datetime</td><td>YES</td><td></td><td>CURRENT_TIMESTAMP</td><td></td><td>注册时间</td></tr></tbody></table><p>**要求：**请在用户信息表，字段 <code>level</code> 的后面增加一列最多可保存 15 个汉字的字段 <code>school</code>；并将表中 <code>job</code> 列名改为 <code>profession</code>，同时 <code>varchar</code> 字段长度变为 10；<code>achievement</code> 的默认值设置为 0。</p><p><strong>思路</strong>：首先做这题之前，需要了解 ALTER 语句的基本用法：</p><ul><li>添加一列：<code>ALTER TABLE 表名 ADD COLUMN 列名 类型 【first | after 字段名】;</code>（first ： 在某列之前添加，after 反之）</li><li>修改列的类型或约束：<code>ALTER TABLE 表名 MODIFY COLUMN 列名 新类型 【新约束】;</code></li><li>修改列名：<code>ALTER TABLE 表名 change COLUMN 旧列名 新列名 类型;</code></li><li>删除列：<code>ALTER TABLE 表名 drop COLUMN 列名;</code></li><li>修改表名：<code>ALTER TABLE 表名 rename 【to】 新表名;</code></li><li>将某一列放到第一列：<code>ALTER TABLE 表名 MODIFY COLUMN 列名 类型 first;</code></li></ul><p><code>COLUMN</code> 关键字其实可以省略不写，这里基于规范还是罗列出来了。</p><p>在修改时，如果有多个修改项，可以写到一起，但要注意格式</p><p><strong>答案</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> user_info
    <span class="token keyword">ADD</span> school <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span> <span class="token keyword">AFTER</span> <span class="token keyword">level</span><span class="token punctuation">,</span>
    CHANGE job profession <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">MODIFY</span> achievement <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除表" tabindex="-1"><a class="header-anchor" href="#删除表" aria-hidden="true">#</a> 删除表</h3><p><strong>描述</strong>：现有一张试卷作答记录表 <code>exam_record</code>，其中包含多年来的用户作答试卷记录。一般每年都会为 <code>exam_record</code> 表建立一张备份表 <code>exam_record_{YEAR}，{YEAR}</code> 为对应年份。</p><p>现在随着数据越来越多，存储告急，请你把很久前的（2011 到 2014 年）备份表都删掉（如果存在的话）。</p><p><strong>思路</strong>：这题很简单，直接删就行，如果嫌麻烦，可以将要删除的表用逗号隔开，写到一行；这里肯定会有小伙伴问：如果要删除很多张表呢？放心，如果要删除很多张表，可以写脚本来进行删除。</p><p><strong>答案</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> exam_record_2011<span class="token punctuation">;</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> exam_record_2012<span class="token punctuation">;</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> exam_record_2013<span class="token punctuation">;</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> exam_record_2014<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建索引" tabindex="-1"><a class="header-anchor" href="#创建索引" aria-hidden="true">#</a> 创建索引</h3><p><strong>描述</strong>：现有一张试卷信息表 <code>examination_info</code>，其中包含各种类型试卷的信息。为了对表更方便快捷地查询，需要在 <code>examination_info</code> 表创建以下索引，</p><p>规则如下：在 <code>duration</code> 列创建普通索引 <code>idx_duration</code>、在 <code>exam_id</code> 列创建唯一性索引 <code>uniq_idx_exam_id</code>、在 <code>tag</code> 列创建全文索引 <code>full_idx_tag</code>。</p><p>根据题意，将返回如下结果：</p><table><thead><tr><th>examination_info</th><th>0</th><th>PRIMARY</th><th>1</th><th>id</th><th>A</th><th>0</th><th></th><th></th><th></th><th>BTREE</th></tr></thead><tbody><tr><td>examination_info</td><td>0</td><td>uniq_idx_exam_id</td><td>1</td><td>exam_id</td><td>A</td><td>0</td><td></td><td></td><td>YES</td><td>BTREE</td></tr><tr><td>examination_info</td><td>1</td><td>idx_duration</td><td>1</td><td>duration</td><td>A</td><td>0</td><td></td><td></td><td></td><td>BTREE</td></tr><tr><td>examination_info</td><td>1</td><td>full_idx_tag</td><td>1</td><td>tag</td><td></td><td>0</td><td></td><td></td><td>YES</td><td>FULLTEXT</td></tr></tbody></table><p>备注：后台会通过 <code>SHOW INDEX FROM examination_info</code> 语句来对比输出结果</p><p><strong>思路</strong>：做这题首先需要了解常见的索引类型：</p><ul><li>B-Tree 索引：B-Tree（或称为平衡树）索引是最常见和默认的索引类型。它适用于各种查询条件，可以快速定位到符合条件的数据。B-Tree 索引适用于普通的查找操作，支持等值查询、范围查询和排序。</li><li>唯一索引：唯一索引与普通的 B-Tree 索引类似，不同之处在于它要求被索引的列的值是唯一的。这意味着在插入或更新数据时，MySQL 会验证索引列的唯一性。</li><li>主键索引：主键索引是一种特殊的唯一索引，它用于唯一标识表中的每一行数据。每个表只能有一个主键索引，它可以帮助提高数据的访问速度和数据完整性。</li><li>全文索引：全文索引用于在文本数据中进行全文搜索。它支持在文本字段中进行关键字搜索，而不仅仅是简单的等值或范围查找。全文索引适用于需要进行全文搜索的应用场景。</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 示例：</span>
<span class="token comment">-- 添加B-Tree索引：</span>
	<span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> idx_name<span class="token punctuation">(</span>索引名<span class="token punctuation">)</span> <span class="token keyword">ON</span> 表名 <span class="token punctuation">(</span>字段名<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">-- idx_name为索引名，以下都是</span>
<span class="token comment">-- 创建唯一索引：</span>
	<span class="token keyword">CREATE</span> <span class="token keyword">UNIQUE</span> <span class="token keyword">INDEX</span> idx_name <span class="token keyword">ON</span> 表名 <span class="token punctuation">(</span>字段名<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 创建一个主键索引：</span>
	<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>字段名<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- 创建一个全文索引</span>
	<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> FULLTEXT <span class="token keyword">INDEX</span> idx_name <span class="token punctuation">(</span>字段名<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 通过以上示例，可以看出create 和 alter 都可以添加索引</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>有了以上的基础知识之后，该题答案也就浮出水面了。</p><p><strong>答案</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> examination_info
    <span class="token keyword">ADD</span> <span class="token keyword">INDEX</span> idx_duration<span class="token punctuation">(</span>duration<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">ADD</span> <span class="token keyword">UNIQUE</span> <span class="token keyword">INDEX</span> uniq_idx_exam_id<span class="token punctuation">(</span>exam_id<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">ADD</span> FULLTEXT <span class="token keyword">INDEX</span> full_idx_tag<span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除索引" tabindex="-1"><a class="header-anchor" href="#删除索引" aria-hidden="true">#</a> 删除索引</h3><p><strong>描述</strong>：请删除<code>examination_info</code>表上的唯一索引 uniq_idx_exam_id 和全文索引 full_idx_tag。</p><p><strong>思路</strong>：该题考察删除索引的基本语法：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 使用 DROP INDEX 删除索引</span>
<span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> idx_name <span class="token keyword">ON</span> 表名<span class="token punctuation">;</span>

<span class="token comment">-- 使用 ALTER TABLE 删除索引</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> employees <span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> idx_email<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里需要注意的是：在 MySQL 中，一次删除多个索引的操作是不支持的。每次删除索引时，只能指定一个索引名称进行删除。</p><p>而且 <strong>DROP</strong> 命令需要慎用！！！</p><p><strong>答案</strong>：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> uniq_idx_exam_id <span class="token keyword">ON</span> examination_info<span class="token punctuation">;</span>
<span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> full_idx_tag <span class="token keyword">ON</span> examination_info<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,123);function u(k,m){const s=d("ExternalLinkIcon");return e(),o("div",null,[t("blockquote",null,[t("p",null,[n("题目来源于："),t("a",i,[n("牛客题霸 - SQL 进阶挑战"),p(s)])])]),l])}const b=a(c,[["render",u],["__file","sql-questions-02.html.vue"]]);export{b as default};
