import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o,c as s,d as e,e as a}from"./app-13bbd311.js";const n={},_=e("h2",{id:"概述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#概述","aria-hidden":"true"},"#"),a(" 概述")],-1),c=e("p",null,"适配器模式是一种结构型设计模式，它允许将一个类的接口转换成客户端所期望的另一个接口。",-1),r=e("p",null,"适配器模式的主要目的是解决两个不兼容接口之间的接口转换问题，使得原本由于接口不匹配而无法工作的类可以协同工作。",-1),d=e("p",null,"适配器模式的核心思想是创建一个适配器类，该适配器类实现了客户端期望的目标接口，并持有一个对被适配者对象的引用。",-1),l=e("p",null,"适配器类通过调用被适配者对象的方法来实现目标接口的方法，从而完成接口的适配。",-1),i=[_,c,r,d,l];function h(p,u){return o(),s("div",null,i)}const x=t(n,[["render",h],["__file","adapter.html.vue"]]);export{x as default};
