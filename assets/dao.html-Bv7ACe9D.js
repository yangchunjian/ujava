import{_ as a,o,c as n,b as t}from"./app-DvdfbZbo.js";const r={};function i(c,e){return o(),n("div",null,e[0]||(e[0]=[t("h2",{id:"概述",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#概述"},[t("span",null,"概述")])],-1),t("p",null,"数据访问对象（DAO）是一个为某种类型的数据库或其他持久性机制提供抽象接口的对象。通过将应用程序调用映射到持久层，DAO在不公开数据库细节的情况下提供了一些特定的数据操作。这种隔离支持单一责任原则。它将特定于域的对象和数据类型（DAO的公共接口）方面的数据访问应用程序需求与特定DBMS如何满足这些需求区分开来。",-1),t("p",null,"使用DAO模式，我们可以使用各种方法调用来检索/添加/删除/更新数据，而无需直接与数据源交互。下面的示例演示了基本的CRUD操作：选择、添加、更新和删除。",-1)]))}const l=a(r,[["render",i],["__file","dao.html.vue"]]),d=JSON.parse('{"path":"/design/other/dao.html","title":"数据访问对象模式","lang":"zh-CN","frontmatter":{"title":"数据访问对象模式","icon":"laptop-code","category":["设计模式"],"tag":["设计模式"],"description":"概述 数据访问对象（DAO）是一个为某种类型的数据库或其他持久性机制提供抽象接口的对象。通过将应用程序调用映射到持久层，DAO在不公开数据库细节的情况下提供了一些特定的数据操作。这种隔离支持单一责任原则。它将特定于域的对象和数据类型（DAO的公共接口）方面的数据访问应用程序需求与特定DBMS如何满足这些需求区分开来。 使用DAO模式，我们可以使用各种方...","head":[["meta",{"property":"og:url","content":"https://ujava.cn/design/other/dao.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"数据访问对象模式"}],["meta",{"property":"og:description","content":"概述 数据访问对象（DAO）是一个为某种类型的数据库或其他持久性机制提供抽象接口的对象。通过将应用程序调用映射到持久层，DAO在不公开数据库细节的情况下提供了一些特定的数据操作。这种隔离支持单一责任原则。它将特定于域的对象和数据类型（DAO的公共接口）方面的数据访问应用程序需求与特定DBMS如何满足这些需求区分开来。 使用DAO模式，我们可以使用各种方..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-04T07:11:24.000Z"}],["meta",{"property":"article:author","content":"UJava"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:modified_time","content":"2024-03-04T07:11:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据访问对象模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-04T07:11:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"UJava\\",\\"url\\":\\"https://ujava.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]}],"git":{"createdTime":1709188462000,"updatedTime":1709536284000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":4}]},"readingTime":{"minutes":0.76,"words":227},"filePathRelative":"design/other/dao.md","localizedDate":"2024年2月29日","excerpt":"<h2>概述</h2>\\n<p>数据访问对象（DAO）是一个为某种类型的数据库或其他持久性机制提供抽象接口的对象。通过将应用程序调用映射到持久层，DAO在不公开数据库细节的情况下提供了一些特定的数据操作。这种隔离支持单一责任原则。它将特定于域的对象和数据类型（DAO的公共接口）方面的数据访问应用程序需求与特定DBMS如何满足这些需求区分开来。</p>\\n<p>使用DAO模式，我们可以使用各种方法调用来检索/添加/删除/更新数据，而无需直接与数据源交互。下面的示例演示了基本的CRUD操作：选择、添加、更新和删除。</p>\\n","autoDesc":true}');export{l as comp,d as data};
