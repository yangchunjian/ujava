const t=JSON.parse('{"key":"v-6190eabb","path":"/attention/attention2.html","title":"架构原则","lang":"zh-CN","frontmatter":{"title":"架构原则","icon":"laptop-code","category":["设计注意"],"tag":["注意"],"description":"架构设计我我们平时写代码不一样，两者的差异主要体现在“不确定性”上。对于编程来说，本质上是确定的，对于同样一段代码，不管是谁写的，不管什么时候执行，执行的结果应该都是确定的；而对于架构设计来说，本质上是不确定，并没有像编程语言那样的语法来进行约束，更多的时候是面对多种可能性时进行选择。 示例： 是要选择业界最先进的技术，还是选择团队目前最熟悉的技术？ 是要选 MySQL 还是 MongoDB？团队对 MySQL 很熟悉，但是 MongoDB 更加适合业务场景？ 淘宝的电商网站架构很完善，我们新做一个电商网站，是否简单地照搬淘宝就可以了？","head":[["meta",{"property":"og:url","content":"https://ujava.cn/attention/attention2.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"架构原则"}],["meta",{"property":"og:description","content":"架构设计我我们平时写代码不一样，两者的差异主要体现在“不确定性”上。对于编程来说，本质上是确定的，对于同样一段代码，不管是谁写的，不管什么时候执行，执行的结果应该都是确定的；而对于架构设计来说，本质上是不确定，并没有像编程语言那样的语法来进行约束，更多的时候是面对多种可能性时进行选择。 示例： 是要选择业界最先进的技术，还是选择团队目前最熟悉的技术？ 是要选 MySQL 还是 MongoDB？团队对 MySQL 很熟悉，但是 MongoDB 更加适合业务场景？ 淘宝的电商网站架构很完善，我们新做一个电商网站，是否简单地照搬淘宝就可以了？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-15T07:11:10.000Z"}],["meta",{"property":"article:author","content":"UJava"}],["meta",{"property":"article:tag","content":"注意"}],["meta",{"property":"article:modified_time","content":"2024-04-15T07:11:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"架构原则\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-15T07:11:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"UJava\\",\\"url\\":\\"https://ujava.cn/article/\\"}]}"]]},"headers":[],"git":{"createdTime":1713151551000,"updatedTime":1713165070000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":2}]},"readingTime":{"minutes":4.05,"words":1215},"filePathRelative":"attention/attention2.md","localizedDate":"2024年4月15日","excerpt":"<p>架构设计我我们平时写代码不一样，两者的差异主要体现在“不确定性”上。对于编程来说，本质上是确定的，对于同样一段代码，不管是谁写的，不管什么时候执行，执行的结果应该都是确定的；而对于架构设计来说，本质上是不确定，并没有像编程语言那样的语法来进行约束，更多的时候是面对多种可能性时进行选择。</p>\\n<p>示例：</p>\\n<ul>\\n<li>是要选择业界最先进的技术，还是选择团队目前最熟悉的技术？</li>\\n<li>是要选 MySQL 还是 MongoDB？团队对 MySQL 很熟悉，但是 MongoDB 更加适合业务场景？</li>\\n<li>淘宝的电商网站架构很完善，我们新做一个电商网站，是否简单地照搬淘宝就可以了？</li>\\n</ul>","copyright":{"author":"UJava(ujava.cn)","license":"MIT"},"autoDesc":true}');export{t as data};
