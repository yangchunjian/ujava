import{_ as n,o as s,c as e,a as t}from"./app-Cq_G4ong.js";const p={};function c(l,a){return s(),e("div",null,a[0]||(a[0]=[t(`<h1 id="创建模式" tabindex="-1"><a class="header-anchor" href="#创建模式"><span>创建模式</span></a></h1><h2 id="singleton-单例" tabindex="-1"><a class="header-anchor" href="#singleton-单例"><span>Singleton(单例)</span></a></h2><p>只允许一个实例。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span> # <span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span>Toolkit</span> # <span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span>GraphicsEnvironment</span> # <span class="token function">getLocalGraphicsEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span>Desktop</span> # <span class="token function">getDesktop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>System</span> # <span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="abstract-factory-抽象工厂" tabindex="-1"><a class="header-anchor" href="#abstract-factory-抽象工厂"><span>Abstract factory(抽象工厂)</span></a></h2><p>创建一组有关联的对象实例。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Calendar</span> # <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Arrays</span> # <span class="token function">asList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ResourceBundle</span> # <span class="token function">getBundle</span><span class="token punctuation">(</span><span class="token class-name">String</span> baseName<span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>DriverManager</span> # <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token class-name">String</span> url<span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>Connection</span> # <span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>Statement</span> # <span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token class-name">String</span> sql<span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span>NumberFormat</span> # <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span></span>TransformerFactory</span> # <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>parsers<span class="token punctuation">.</span></span>DocumentBuilderFactory</span> # <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>parsers<span class="token punctuation">.</span></span>DocumentBuilderFactory</span> # <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="factory-工厂方法" tabindex="-1"><a class="header-anchor" href="#factory-工厂方法"><span>Factory(工厂方法)</span></a></h2><p>按照需求返回一个类型的实例。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Proxy</span> # <span class="token function">newProxyInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span> # <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Class</span> # <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Array</span> # <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Constructor</span> # <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Boolean</span> # <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Class</span> # <span class="token function">forName</span><span class="token punctuation">(</span><span class="token class-name">String</span> className<span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Calendar</span> # <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>ResourceBundle</span> # <span class="token function">getBundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span>NumberFormat</span> # <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span>Charset</span> # <span class="token function">forName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>URLStreamHandlerFactory</span> # <span class="token function">createURLStreamHandler</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>bind<span class="token punctuation">.</span></span>JAXBContext</span> # <span class="token function">createMarshaller</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="builder-建造者" tabindex="-1"><a class="header-anchor" href="#builder-建造者"><span>Builder(建造者)</span></a></h2><p>主要用来简化一个复杂对象的创建。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>StringBuilder</span> # <span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span><span class="token punctuation">(</span>非线程安全<span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>StringBuffer</span> # <span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span><span class="token punctuation">(</span>线程安全<span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span>GroupLayout<span class="token punctuation">.</span>Group</span> # <span class="token function">addComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span>ByteBuffer</span> # <span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
所有的实现 <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Appendable</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="prototype-原型" tabindex="-1"><a class="header-anchor" href="#prototype-原型"><span>Prototype(原型)</span></a></h2><p>使用自己的实例创建另外一个实例。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span> # <span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Cloneable</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="结构模式" tabindex="-1"><a class="header-anchor" href="#结构模式"><span>结构模式</span></a></h1><h2 id="adapter-适配器" tabindex="-1"><a class="header-anchor" href="#adapter-适配器"><span>Adapter(适配器)</span></a></h2><p>可通过创建方法识别采用不同抽象/接口类型的实例，并返回自己/抽象/接口类型的实现，其装饰/覆盖给定实例。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Arrays</span> # <span class="token function">asList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span>JTable</span><span class="token punctuation">(</span><span class="token class-name">TableModel</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>InputStreamReader</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>OutputStreamWriter</span><span class="token punctuation">(</span><span class="token class-name">OutputStream</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>adapters<span class="token punctuation">.</span></span>XmlAdapter</span> # <span class="token function">marshal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>adapters<span class="token punctuation">.</span></span>XmlAdapter</span> # <span class="token function">unmarshal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Collections</span> # <span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Collections</span> # <span class="token function">enumeration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="composite-组合" tabindex="-1"><a class="header-anchor" href="#composite-组合"><span>Composite(组合)</span></a></h2><p>让使用者将单独对象和组合对象混用。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span>JComponent</span> # <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Component</span> comp<span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span>Container</span> # <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Component</span> comp<span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Map</span> # <span class="token function">putAll</span><span class="token punctuation">(</span><span class="token class-name">Map</span> m<span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>List</span> # <span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Collection</span> c<span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Set</span> # <span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">Collection</span> c<span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>faces<span class="token punctuation">.</span>component<span class="token punctuation">.</span></span>UIComponent</span> # <span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="decorator-装饰器" tabindex="-1"><a class="header-anchor" href="#decorator-装饰器"><span>Decorator(装饰器)</span></a></h2><p>为一个对象动态地加上一系列动作，而不需要因为这些动作的不同产生大量的继承类。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>BufferedInputStream</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>DataInputStream</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>BufferedOutputStream</span><span class="token punctuation">(</span><span class="token class-name">OutputStream</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>zip<span class="token punctuation">.</span></span>ZipOutputStream</span><span class="token punctuation">(</span><span class="token class-name">OutputStream</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Collections</span> # <span class="token function">checkedList</span><span class="token punctuation">(</span><span class="token class-name">List</span> list<span class="token punctuation">,</span> <span class="token class-name">Class</span> type<span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Collections</span>的<span class="token function">checkedXXX</span><span class="token punctuation">(</span><span class="token punctuation">)</span>，<span class="token function">synchronizedXXX</span><span class="token punctuation">(</span><span class="token punctuation">)</span>和<span class="token function">unmodifiableXXX</span><span class="token punctuation">(</span><span class="token punctuation">)</span>方法
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>HttpServletRequestWrapper</span> 和 <span class="token class-name">HttpServletResponseWrapper</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="facade-门面" tabindex="-1"><a class="header-anchor" href="#facade-门面"><span>Facade(门面)</span></a></h2><p>一个简单的接口包装一组组件、接口、抽象或者子系统。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Class</span>
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>faces<span class="token punctuation">.</span>webapp<span class="token punctuation">.</span></span>FacesServlet</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="flyweight-享元模式" tabindex="-1"><a class="header-anchor" href="#flyweight-享元模式"><span>Flyweight(享元模式)</span></a></h2><p>使用缓存来加速大量小对象的访问时间。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Integer</span> # <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Boolean</span> # <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">boolean</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Byte</span> # <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Character</span> # <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="proxy-代理" tabindex="-1"><a class="header-anchor" href="#proxy-代理"><span>Proxy(代理)</span></a></h2><p>用一个简单的对象代替一个复杂的对象。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Proxy</span>
java<span class="token punctuation">.</span>rmi<span class="token punctuation">.</span>*
javax<span class="token punctuation">.</span>ejb<span class="token punctuation">.</span><span class="token constant">EJB</span>
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>inject<span class="token punctuation">.</span></span>Inject</span>
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>persistence<span class="token punctuation">.</span></span>PersistenceContext</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="行为模式" tabindex="-1"><a class="header-anchor" href="#行为模式"><span>行为模式</span></a></h1><h2 id="chain-of-responsibility-责任链" tabindex="-1"><a class="header-anchor" href="#chain-of-responsibility-责任链"><span>Chain of Responsibility(责任链)</span></a></h2><p>一个对象在一个链接传递直到被处理。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span>Logger</span> # <span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>Filter</span> # <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="command-命令" tabindex="-1"><a class="header-anchor" href="#command-命令"><span>Command(命令)</span></a></h2><p>将一系列命令封装成在一个类中。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>所有的实现 <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runnable</span>
所有的实现 <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span>Action</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="interpreter-解释器" tabindex="-1"><a class="header-anchor" href="#interpreter-解释器"><span>Interpreter(解释器)</span></a></h2><p>定义语言的文法，并且建立一个解释器来解释该语言中的句子。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Pattern</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span>Normalizer</span>
所有子类 <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span>Format</span>
所有子类 <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>el<span class="token punctuation">.</span></span>ELResolver</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iterator-迭代器" tabindex="-1"><a class="header-anchor" href="#iterator-迭代器"><span>Iterator(迭代器)</span></a></h2><p>对象遍历。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Iterator</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Enumeration</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Scanner</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mediator-中介" tabindex="-1"><a class="header-anchor" href="#mediator-中介"><span>Mediator(中介)</span></a></h2><p>用一个中介对象来封装一系列关于对象交互行为。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Timer</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>Executor</span> # <span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ExecutorService</span>（<span class="token function">invokeXXX</span><span class="token punctuation">(</span><span class="token punctuation">)</span>和<span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>方法）
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ScheduledExecutorService</span>（所有<span class="token function">scheduleXXX</span><span class="token punctuation">(</span><span class="token punctuation">)</span>方法）
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Method</span> # <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="memento-快照-备忘录模式" tabindex="-1"><a class="header-anchor" href="#memento-快照-备忘录模式"><span>Memento(快照-备忘录模式)</span></a></h2><p>保存另外一个对象内部状态拷贝的对象</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="observer-观察者" tabindex="-1"><a class="header-anchor" href="#observer-观察者"><span>Observer(观察者)</span></a></h2><p>事件监听器。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>EventListener</span>  
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>HttpSessionBindingListener</span>  
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>HttpSessionAttributeListener</span>  
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>faces<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span>PhaseListener</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="state-状态" tabindex="-1"><a class="header-anchor" href="#state-状态"><span>State(状态)</span></a></h2><p>不同的状态，不同的行为；或者说每个状态有相应的行为。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Iterator</span>  
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>faces<span class="token punctuation">.</span>lifecycle<span class="token punctuation">.</span></span>LifeCycle</span> # <span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="strategy-策略" tabindex="-1"><a class="header-anchor" href="#strategy-策略"><span>Strategy(策略)</span></a></h2><p>定义一系列算法，把这些算法一个一个封装成单独的类。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Comparator</span> # <span class="token function">compare</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>HttpServlet</span>
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>Filter</span> # <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="template-模板" tabindex="-1"><a class="header-anchor" href="#template-模板"><span>Template(模板)</span></a></h2><p>定义一个操作中算法的骨架，将一些步骤的执行延迟到其子类中。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Collections</span> # <span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>InputStream</span> # <span class="token function">skip</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>InputStream</span> # <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>AbstractList</span> # <span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="visitor-访问者" tabindex="-1"><a class="header-anchor" href="#visitor-访问者"><span>Visitor(访问者)</span></a></h2><p>作用于某个对象群中各个对象的操作，它可以使你在不改变这些对象本身的情况下，定义作用于这些对象的新操作。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>model<span class="token punctuation">.</span>element<span class="token punctuation">.</span></span>Element</span>
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>model<span class="token punctuation">.</span>element<span class="token punctuation">.</span></span>ElementVisitor</span>  
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>model<span class="token punctuation">.</span>type<span class="token punctuation">.</span></span>TypeMirror</span>
<span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>model<span class="token punctuation">.</span>type<span class="token punctuation">.</span></span>TypeVisitor</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,69)]))}const i=n(p,[["render",c],["__file","jdkdesign.html.vue"]]),u=JSON.parse('{"path":"/java/jdkdesign.html","title":"Java中设计模式","lang":"zh-CN","frontmatter":{"title":"Java中设计模式","category":"Java","icon":"laptop-code","tag":["设计Java"],"description":"创建模式 Singleton(单例) 只允许一个实例。 Abstract factory(抽象工厂) 创建一组有关联的对象实例。 Factory(工厂方法) 按照需求返回一个类型的实例。 Builder(建造者) 主要用来简化一个复杂对象的创建。 Prototype(原型) 使用自己的实例创建另外一个实例。 结构模式 Adapter(适配器) 可通过创...","head":[["meta",{"property":"og:url","content":"https://ujava.cn/java/jdkdesign.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"Java中设计模式"}],["meta",{"property":"og:description","content":"创建模式 Singleton(单例) 只允许一个实例。 Abstract factory(抽象工厂) 创建一组有关联的对象实例。 Factory(工厂方法) 按照需求返回一个类型的实例。 Builder(建造者) 主要用来简化一个复杂对象的创建。 Prototype(原型) 使用自己的实例创建另外一个实例。 结构模式 Adapter(适配器) 可通过创..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-23T06:59:45.000Z"}],["meta",{"property":"article:author","content":"UJava"}],["meta",{"property":"article:tag","content":"设计Java"}],["meta",{"property":"article:modified_time","content":"2024-04-23T06:59:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java中设计模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-23T06:59:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"UJava\\",\\"url\\":\\"https://ujava.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"Singleton(单例)","slug":"singleton-单例","link":"#singleton-单例","children":[]},{"level":2,"title":"Abstract factory(抽象工厂)","slug":"abstract-factory-抽象工厂","link":"#abstract-factory-抽象工厂","children":[]},{"level":2,"title":"Factory(工厂方法)","slug":"factory-工厂方法","link":"#factory-工厂方法","children":[]},{"level":2,"title":"Builder(建造者)","slug":"builder-建造者","link":"#builder-建造者","children":[]},{"level":2,"title":"Prototype(原型)","slug":"prototype-原型","link":"#prototype-原型","children":[]},{"level":2,"title":"Adapter(适配器)","slug":"adapter-适配器","link":"#adapter-适配器","children":[]},{"level":2,"title":"Composite(组合)","slug":"composite-组合","link":"#composite-组合","children":[]},{"level":2,"title":"Decorator(装饰器)","slug":"decorator-装饰器","link":"#decorator-装饰器","children":[]},{"level":2,"title":"Facade(门面)","slug":"facade-门面","link":"#facade-门面","children":[]},{"level":2,"title":"Flyweight(享元模式)","slug":"flyweight-享元模式","link":"#flyweight-享元模式","children":[]},{"level":2,"title":"Proxy(代理)","slug":"proxy-代理","link":"#proxy-代理","children":[]},{"level":2,"title":"Chain of Responsibility(责任链)","slug":"chain-of-responsibility-责任链","link":"#chain-of-responsibility-责任链","children":[]},{"level":2,"title":"Command(命令)","slug":"command-命令","link":"#command-命令","children":[]},{"level":2,"title":"Interpreter(解释器)","slug":"interpreter-解释器","link":"#interpreter-解释器","children":[]},{"level":2,"title":"Iterator(迭代器)","slug":"iterator-迭代器","link":"#iterator-迭代器","children":[]},{"level":2,"title":"Mediator(中介)","slug":"mediator-中介","link":"#mediator-中介","children":[]},{"level":2,"title":"Memento(快照-备忘录模式)","slug":"memento-快照-备忘录模式","link":"#memento-快照-备忘录模式","children":[]},{"level":2,"title":"Observer(观察者)","slug":"observer-观察者","link":"#observer-观察者","children":[]},{"level":2,"title":"State(状态)","slug":"state-状态","link":"#state-状态","children":[]},{"level":2,"title":"Strategy(策略)","slug":"strategy-策略","link":"#strategy-策略","children":[]},{"level":2,"title":"Template(模板)","slug":"template-模板","link":"#template-模板","children":[]},{"level":2,"title":"Visitor(访问者)","slug":"visitor-访问者","link":"#visitor-访问者","children":[]}],"git":{"createdTime":1706144210000,"updatedTime":1713855585000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":6}]},"readingTime":{"minutes":2.78,"words":834},"filePathRelative":"java/jdkdesign.md","localizedDate":"2024年1月25日","excerpt":"\\n<h2>Singleton(单例)</h2>\\n<p>只允许一个实例。</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token class-name\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>lang<span class=\\"token punctuation\\">.</span></span>Runtime</span> # <span class=\\"token function\\">getRuntime</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token class-name\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>awt<span class=\\"token punctuation\\">.</span></span>Toolkit</span> # <span class=\\"token function\\">getDefaultToolkit</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token class-name\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>awt<span class=\\"token punctuation\\">.</span></span>GraphicsEnvironment</span> # <span class=\\"token function\\">getLocalGraphicsEnvironment</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token class-name\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>awt<span class=\\"token punctuation\\">.</span></span>Desktop</span> # <span class=\\"token function\\">getDesktop</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token class-name\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>lang<span class=\\"token punctuation\\">.</span></span>System</span> # <span class=\\"token function\\">getSecurityManager</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n</code></pre></div>","autoDesc":true}');export{i as comp,u as data};
