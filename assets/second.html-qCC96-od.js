const e=JSON.parse('{"key":"v-78e5c8be","path":"/mind/second.html","title":"第二梯队思想","lang":"zh-CN","frontmatter":{"title":"第二梯队思想","icon":"laptop-code","category":["设计思想"],"description":"第二梯队思想 第二梯队思想，虽然不如第一梯队思想那么通用广泛，却也是编程领域的重要思想，有着举足轻重的地位。 递归 一个规模为N的问题的解可以由规模为S（S&lt;=N）的同样性质的问题的解来构造。 举个简单的例子，1+2+3+4+5 = 1 + (2+3+4+5) = 1 + (2 + (3+4+5)) = 1 + (2 + (3 + (4+5))) = 1 + (2 + (3 + (4+(5))))。 N 个数的和等于第 N 个数加上 N-1 个数的和。 递归技术是一种非常有效的程序设计技术。很多数据结构都有递归特性。列表、字符串、二叉树、JSON等。","head":[["meta",{"property":"og:url","content":"https://ujava.cn/mind/second.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"第二梯队思想"}],["meta",{"property":"og:description","content":"第二梯队思想 第二梯队思想，虽然不如第一梯队思想那么通用广泛，却也是编程领域的重要思想，有着举足轻重的地位。 递归 一个规模为N的问题的解可以由规模为S（S&lt;=N）的同样性质的问题的解来构造。 举个简单的例子，1+2+3+4+5 = 1 + (2+3+4+5) = 1 + (2 + (3+4+5)) = 1 + (2 + (3 + (4+5))) = 1 + (2 + (3 + (4+(5))))。 N 个数的和等于第 N 个数加上 N-1 个数的和。 递归技术是一种非常有效的程序设计技术。很多数据结构都有递归特性。列表、字符串、二叉树、JSON等。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-01T03:13:51.000Z"}],["meta",{"property":"article:author","content":"ujava"}],["meta",{"property":"article:modified_time","content":"2024-03-01T03:13:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第二梯队思想\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-01T03:13:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ujava\\",\\"url\\":\\"https://ujava.cn\\"}]}"]]},"headers":[{"level":2,"title":"递归","slug":"递归","link":"#递归","children":[]},{"level":2,"title":"索引","slug":"索引","link":"#索引","children":[]},{"level":2,"title":"迭代","slug":"迭代","link":"#迭代","children":[]},{"level":2,"title":"遍历","slug":"遍历","link":"#遍历","children":[]},{"level":2,"title":"中断","slug":"中断","link":"#中断","children":[]},{"level":2,"title":"回滚","slug":"回滚","link":"#回滚","children":[]},{"level":2,"title":"模板","slug":"模板","link":"#模板","children":[]},{"level":2,"title":"模式","slug":"模式","link":"#模式","children":[]},{"level":2,"title":"代理","slug":"代理","link":"#代理","children":[]}],"git":{"createdTime":1698747933000,"updatedTime":1709262831000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":2}]},"readingTime":{"minutes":4.9,"words":1470},"filePathRelative":"mind/second.md","localizedDate":"2023年10月31日","excerpt":"<h1> 第二梯队思想</h1>\\n<p>第二梯队思想，虽然不如第一梯队思想那么通用广泛，却也是编程领域的重要思想，有着举足轻重的地位。</p>\\n<h2> 递归</h2>\\n<p>一个规模为N的问题的解可以由规模为S（S&lt;=N）的同样性质的问题的解来构造。</p>\\n<p>举个简单的例子，1+2+3+4+5 = 1 + (2+3+4+5) = 1 + (2 + (3+4+5)) = 1 + (2 + (3 + (4+5))) = 1 + (2 + (3 + (4+(5))))。 N 个数的和等于第 N 个数加上 N-1 个数的和。</p>\\n<p>递归技术是一种非常有效的程序设计技术。很多数据结构都有递归特性。列表、字符串、二叉树、JSON等。</p>","copyright":{"author":"UJava(ujava.cn)","license":"MIT"},"autoDesc":true}');export{e as data};
