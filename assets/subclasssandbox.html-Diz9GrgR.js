import{_ as a,c as o,b as e,o as n}from"./app-dgKsaxQq.js";const r={};function s(c,t){return n(),o("div",null,t[0]||(t[0]=[e("h2",{id:"概述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#概述"},[e("span",null,"概述")])],-1),e("p",null,"子类沙盒模式描述了一个基本思想，但没有很多详细的机制。当您有几个类似的子类时，您将需要该模式。如果你必须做一个微小的改变，那么就改变基类，而所有的子类都不应该被触及。因此基类必须能够提供派生类需要执行的所有操作。",-1)]))}const l=a(r,[["render",s],["__file","subclasssandbox.html.vue"]]),p=JSON.parse('{"path":"/design/other/subclasssandbox.html","title":"子类沙盒模式","lang":"zh-CN","frontmatter":{"title":"子类沙盒模式","icon":"laptop-code","category":["设计模式"],"tag":["设计模式"],"description":"概述 子类沙盒模式描述了一个基本思想，但没有很多详细的机制。当您有几个类似的子类时，您将需要该模式。如果你必须做一个微小的改变，那么就改变基类，而所有的子类都不应该被触及。因此基类必须能够提供派生类需要执行的所有操作。","head":[["meta",{"property":"og:url","content":"https://ujava.cn/design/other/subclasssandbox.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"子类沙盒模式"}],["meta",{"property":"og:description","content":"概述 子类沙盒模式描述了一个基本思想，但没有很多详细的机制。当您有几个类似的子类时，您将需要该模式。如果你必须做一个微小的改变，那么就改变基类，而所有的子类都不应该被触及。因此基类必须能够提供派生类需要执行的所有操作。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-04T07:11:24.000Z"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:modified_time","content":"2024-03-04T07:11:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"子类沙盒模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-04T07:11:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"UJava\\",\\"url\\":\\"https://ujava.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]}],"git":{"createdTime":1709534215000,"updatedTime":1709536284000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":2}]},"readingTime":{"minutes":0.4,"words":120},"filePathRelative":"design/other/subclasssandbox.md","localizedDate":"2024年3月4日","excerpt":"<h2>概述</h2>\\n<p>子类沙盒模式描述了一个基本思想，但没有很多详细的机制。当您有几个类似的子类时，您将需要该模式。如果你必须做一个微小的改变，那么就改变基类，而所有的子类都不应该被触及。因此基类必须能够提供派生类需要执行的所有操作。</p>\\n","autoDesc":true}');export{l as comp,p as data};
