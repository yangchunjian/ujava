const e=JSON.parse('{"key":"v-041d6e20","path":"/synthesis/interceptorfilter.html","title":"Interceptor、Filter、AOP区别","lang":"zh-CN","frontmatter":{"title":"Interceptor、Filter、AOP区别","icon":"laptop-code","category":["设计高频"],"tag":["高频"],"description":"Filter过滤器 过滤器拦截web访问url地址。 严格意义上讲，filter只是适用于web中，依赖于Servlet容器，利用Java的回调机制进行实现。 Filter过滤器：和框架无关，可以控制最初的http请求，但是更细一点的类和方法控制不了。 过滤器可以拦截到方法的请求和响应(ServletRequest request, ServletResponse response)，并对请求响应做出像响应的过滤操作， 比如设置字符编码，鉴权操作等","head":[["meta",{"property":"og:url","content":"https://ujava.cn/synthesis/interceptorfilter.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"Interceptor、Filter、AOP区别"}],["meta",{"property":"og:description","content":"Filter过滤器 过滤器拦截web访问url地址。 严格意义上讲，filter只是适用于web中，依赖于Servlet容器，利用Java的回调机制进行实现。 Filter过滤器：和框架无关，可以控制最初的http请求，但是更细一点的类和方法控制不了。 过滤器可以拦截到方法的请求和响应(ServletRequest request, ServletResponse response)，并对请求响应做出像响应的过滤操作， 比如设置字符编码，鉴权操作等"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-25T03:33:51.000Z"}],["meta",{"property":"article:author","content":"UJava"}],["meta",{"property":"article:tag","content":"高频"}],["meta",{"property":"article:modified_time","content":"2024-04-25T03:33:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Interceptor、Filter、AOP区别\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-25T03:33:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"UJava\\",\\"url\\":\\"https://ujava.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"Filter过滤器","slug":"filter过滤器","link":"#filter过滤器","children":[]},{"level":2,"title":"Interceptor拦截器","slug":"interceptor拦截器","link":"#interceptor拦截器","children":[]},{"level":2,"title":"Spring AOP拦截器","slug":"spring-aop拦截器","link":"#spring-aop拦截器","children":[{"level":3,"title":"Spring对AOP的支持","slug":"spring对aop的支持","link":"#spring对aop的支持","children":[]}]},{"level":2,"title":"Filter与Interceptor联系与区别","slug":"filter与interceptor联系与区别","link":"#filter与interceptor联系与区别","children":[{"level":3,"title":"小结","slug":"小结","link":"#小结","children":[]}]},{"level":2,"title":"Filter、Interceptor、aop拦截方向和抛出异常方向图","slug":"filter、interceptor、aop拦截方向和抛出异常方向图","link":"#filter、interceptor、aop拦截方向和抛出异常方向图","children":[]}],"git":{"createdTime":1714016031000,"updatedTime":1714016031000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":1}]},"readingTime":{"minutes":4.25,"words":1274},"filePathRelative":"synthesis/interceptorfilter.md","localizedDate":"2024年4月25日","excerpt":"<h2> Filter过滤器</h2>\\n<blockquote>\\n<ul>\\n<li><strong>过滤器拦截web访问url地址</strong>。 严格意义上讲，filter只是适用于web中，依赖于Servlet容器，利用<strong>Java的回调机制</strong>进行实现。</li>\\n<li>Filter<strong>过滤器</strong>：和框架无关，可以控制最初的http请求，但是更细一点的类和方法控制不了。</li>\\n<li><strong>过滤器可以拦截到方法的请求和响应(ServletRequest request, ServletResponse response)</strong>，并对请求响应做出像响应的过滤操作，</li>\\n<li>比如<strong>设置字符编码，鉴权操作</strong>等</li>\\n</ul>\\n</blockquote>","copyright":{"author":"UJava(ujava.cn)","license":"MIT"},"autoDesc":true}');export{e as data};
