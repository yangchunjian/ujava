const e=JSON.parse('{"key":"v-2f237cea","path":"/highfreq/attention1.html","title":"设计注意事项一","lang":"zh-CN","frontmatter":{"title":"设计注意事项一","icon":"laptop-code","category":["设计高频"],"tag":["高频"],"description":"简介 架构的本质 其实总结下来就一句话：架构本质上其实就是一种指导型的约束，约定整体和部分、部分和部分之间的关系，以使整体更加稳定，更加可靠。 分为三部分： 整体：部分的组成，强调合力。 规则：强调部分之前有关联关系，有规则，有约束。 通信：强调部分之间有往来，有交互。 img_18.png 架构的分类 实际上架构有很多种类型，比如业务架构，应用架构，技术架构，数据架构等，甚至单个架构，我们站在不同的角度上，也会有不同的看法，其中的复杂度也是各不一样的。","head":[["meta",{"property":"og:url","content":"https://ujava.cn/ujava/highfreq/attention1.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"设计注意事项一"}],["meta",{"property":"og:description","content":"简介 架构的本质 其实总结下来就一句话：架构本质上其实就是一种指导型的约束，约定整体和部分、部分和部分之间的关系，以使整体更加稳定，更加可靠。 分为三部分： 整体：部分的组成，强调合力。 规则：强调部分之前有关联关系，有规则，有约束。 通信：强调部分之间有往来，有交互。 img_18.png 架构的分类 实际上架构有很多种类型，比如业务架构，应用架构，技术架构，数据架构等，甚至单个架构，我们站在不同的角度上，也会有不同的看法，其中的复杂度也是各不一样的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-03T03:00:03.000Z"}],["meta",{"property":"article:author","content":"UJava"}],["meta",{"property":"article:tag","content":"高频"}],["meta",{"property":"article:modified_time","content":"2024-03-03T03:00:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设计注意事项一\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-03T03:00:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"UJava\\",\\"url\\":\\"https://ujava.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"架构的本质","slug":"架构的本质","link":"#架构的本质","children":[]},{"level":2,"title":"架构的分类","slug":"架构的分类","link":"#架构的分类","children":[]},{"level":2,"title":"业务架构","slug":"业务架构","link":"#业务架构","children":[]},{"level":2,"title":"应用架构","slug":"应用架构","link":"#应用架构","children":[]},{"level":2,"title":"技术架构","slug":"技术架构","link":"#技术架构","children":[]},{"level":2,"title":"数据架构","slug":"数据架构","link":"#数据架构","children":[]},{"level":2,"title":"架构设计要考虑的因素","slug":"架构设计要考虑的因素","link":"#架构设计要考虑的因素","children":[]},{"level":2,"title":"功能性因素","slug":"功能性因素","link":"#功能性因素","children":[]},{"level":2,"title":"非功能性因素","slug":"非功能性因素","link":"#非功能性因素","children":[]},{"level":2,"title":"设计原则","slug":"设计原则","link":"#设计原则","children":[]},{"level":2,"title":"常见的架构设计方案","slug":"常见的架构设计方案","link":"#常见的架构设计方案","children":[]},{"level":2,"title":"领域驱动架构","slug":"领域驱动架构","link":"#领域驱动架构","children":[]},{"level":2,"title":"微服务架构","slug":"微服务架构","link":"#微服务架构","children":[]},{"level":2,"title":"云原生架构","slug":"云原生架构","link":"#云原生架构","children":[]},{"level":2,"title":"DevOps架构","slug":"devops架构","link":"#devops架构","children":[]},{"level":2,"title":"大数据架构","slug":"大数据架构","link":"#大数据架构","children":[]}],"git":{"createdTime":1700221550000,"updatedTime":1709434803000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":4}]},"readingTime":{"minutes":11.61,"words":3482},"filePathRelative":"highfreq/attention1.md","localizedDate":"2023年11月17日","excerpt":"<h2> 简介</h2>\\n<h2> 架构的本质</h2>\\n<p>其实总结下来就一句话：<strong>架构本质上其实就是一种指导型的约束，约定整体和部分、部分和部分之间的关系，以使整体更加稳定，更加可靠。</strong></p>\\n<p>分为三部分：</p>\\n<ul>\\n<li>整体：部分的组成，强调合力。</li>\\n<li>规则：强调部分之前有关联关系，有规则，有约束。</li>\\n<li>通信：强调部分之间有往来，有交互。</li>\\n</ul>\\n<figure><figcaption>img_18.png</figcaption></figure>\\n<h2> 架构的分类</h2>\\n<p>实际上架构有很多种类型，比如业务架构，应用架构，技术架构，数据架构等，甚至单个架构，我们站在不同的角度上，也会有不同的看法，其中的复杂度也是各不一样的。</p>","copyright":{"author":"UJava(ujava.cn)","license":"MIT"},"autoDesc":true}');export{e as data};
