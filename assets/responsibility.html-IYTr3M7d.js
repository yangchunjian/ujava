const t=JSON.parse('{"key":"v-758d694a","path":"/design/action/responsibility.html","title":"责任链模式","lang":"zh-CN","frontmatter":{"title":"责任链模式","index":false,"icon":"laptop-code","category":["设计模式"],"description":"概述 介绍：如果有多个对象有机会处理请求，责任链可使请求的发送者和接受者解耦，请求沿着责任链传递，直到有一个对象处理了它为止 场景： 1.多个对象可以处理同一个请求，但具体由哪个对象处理则在运行时动态决定。; 2. 在请求处理者不明确的情况下向对个对象中的一个提交一个请求。; 3. 需要动态处理一组对象处理请求。; 常用在框架开发中，用来实现过滤器、拦...","head":[["meta",{"property":"og:url","content":"https://ujava.cn/design/action/responsibility.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"责任链模式"}],["meta",{"property":"og:description","content":"概述 介绍：如果有多个对象有机会处理请求，责任链可使请求的发送者和接受者解耦，请求沿着责任链传递，直到有一个对象处理了它为止 场景： 1.多个对象可以处理同一个请求，但具体由哪个对象处理则在运行时动态决定。; 2. 在请求处理者不明确的情况下向对个对象中的一个提交一个请求。; 3. 需要动态处理一组对象处理请求。; 常用在框架开发中，用来实现过滤器、拦..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-12T12:18:57.000Z"}],["meta",{"property":"article:author","content":"ujava"}],["meta",{"property":"article:modified_time","content":"2023-10-12T12:18:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"责任链模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-12T12:18:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ujava\\",\\"url\\":\\"https://ujava.cn\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]}],"git":{"createdTime":1695722754000,"updatedTime":1697113137000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":2}]},"readingTime":{"minutes":1.72,"words":516},"filePathRelative":"design/action/responsibility.md","localizedDate":"2023年9月26日","autoDesc":true}');export{t as data};
