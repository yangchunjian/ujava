const t=JSON.parse('{"key":"v-559f7b68","path":"/design/create/abstractfactory.html","title":"抽象工厂模式","lang":"zh-CN","frontmatter":{"title":"抽象工厂模式","index":false,"icon":"laptop-code","category":["设计模式"],"description":"概述 通过定义一个创建对象的接口来创建对象，但将具体实现的决定留给子类来决定。 在抽象工厂模式中，接口是负责创建一个相关对象的工厂，不需要显式指定它们的类。每个生成的工厂都能按照工厂模式提供对象。","head":[["meta",{"property":"og:url","content":"https://ujava.cn/design/create/abstractfactory.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"抽象工厂模式"}],["meta",{"property":"og:description","content":"概述 通过定义一个创建对象的接口来创建对象，但将具体实现的决定留给子类来决定。 在抽象工厂模式中，接口是负责创建一个相关对象的工厂，不需要显式指定它们的类。每个生成的工厂都能按照工厂模式提供对象。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-08T07:46:24.000Z"}],["meta",{"property":"article:author","content":"ujava"}],["meta",{"property":"article:modified_time","content":"2023-10-08T07:46:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"抽象工厂模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-08T07:46:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ujava\\",\\"url\\":\\"https://ujava.cn\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]}],"git":{"createdTime":1696751184000,"updatedTime":1696751184000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":1}]},"readingTime":{"minutes":0.36,"words":107},"filePathRelative":"design/create/abstractfactory.md","localizedDate":"2023年10月8日","autoDesc":true}');export{t as data};
