const e=JSON.parse('{"key":"v-229eeb79","path":"/principle/second.html","title":"设计原理:抽象","lang":"zh-CN","frontmatter":{"title":"设计原理:抽象","icon":"laptop-code","category":["设计原理"],"description":"抽象（编程的实质） 抽象是针对问题的特征对现实事物的紧密相关的属性的提炼过程及结果。程序中弥漫着大大小小的抽象。 分页控件是对分页功能的抽象， Extjs 中 store 是对组件的数据管理者的抽象， Java 并发库是对底层多核处理器的抽象， 拦截器，回调函数， Socket , 管道， 消息， 对象， 都是对现实世界的某种实体的抽象。 没有抽象， 也可以写出程序； 但当系统越来越大时， 就会无休止地重复相似的代码， 使系统变得臃肿而难以忍受； 而通过将实体和事件抽象成简洁的概念并找到一致的处理方法， 就可能开发出更为简洁优雅的方案。","head":[["meta",{"property":"og:url","content":"https://ujava.cn/ujava/principle/second.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"设计原理:抽象"}],["meta",{"property":"og:description","content":"抽象（编程的实质） 抽象是针对问题的特征对现实事物的紧密相关的属性的提炼过程及结果。程序中弥漫着大大小小的抽象。 分页控件是对分页功能的抽象， Extjs 中 store 是对组件的数据管理者的抽象， Java 并发库是对底层多核处理器的抽象， 拦截器，回调函数， Socket , 管道， 消息， 对象， 都是对现实世界的某种实体的抽象。 没有抽象， 也可以写出程序； 但当系统越来越大时， 就会无休止地重复相似的代码， 使系统变得臃肿而难以忍受； 而通过将实体和事件抽象成简洁的概念并找到一致的处理方法， 就可能开发出更为简洁优雅的方案。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-03T03:00:03.000Z"}],["meta",{"property":"article:author","content":"UJava"}],["meta",{"property":"article:modified_time","content":"2024-03-03T03:00:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设计原理:抽象\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-03T03:00:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"UJava\\",\\"url\\":\\"https://ujava.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"抽象（编程的实质）","slug":"抽象-编程的实质","link":"#抽象-编程的实质","children":[]},{"level":2,"title":"在合适的抽象层次上思考问题","slug":"在合适的抽象层次上思考问题","link":"#在合适的抽象层次上思考问题","children":[]},{"level":2,"title":"计算世界里的抽象","slug":"计算世界里的抽象","link":"#计算世界里的抽象","children":[]}],"git":{"createdTime":1698750645000,"updatedTime":1709434803000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":3}]},"readingTime":{"minutes":4.26,"words":1278},"filePathRelative":"principle/second.md","localizedDate":"2023年10月31日","excerpt":"<h2> 抽象（编程的实质）</h2>\\n<p>抽象是针对问题的特征对现实事物的紧密相关的属性的提炼过程及结果。程序中弥漫着大大小小的抽象。 分页控件是对分页功能的抽象，<br>\\nExtjs 中 store 是对组件的数据管理者的抽象， Java 并发库是对底层多核处理器的抽象， 拦截器，回调函数， Socket , 管道， 消息，<br>\\n对象， 都是对现实世界的某种实体的抽象。 没有抽象， 也可以写出程序； 但当系统越来越大时， 就会无休止地重复相似的代码，<br>\\n使系统变得臃肿而难以忍受； 而通过将实体和事件抽象成简洁的概念并找到一致的处理方法， 就可能开发出更为简洁优雅的方案。</p>","copyright":{"author":"UJava(ujava.cn)","license":"MIT"},"autoDesc":true}');export{e as data};
