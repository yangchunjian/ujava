const e=JSON.parse('{"key":"v-84c13652","path":"/java/collection/priorityqueue-source-code.html","title":"PriorityQueue 源码分析","lang":"zh-CN","frontmatter":{"title":"PriorityQueue 源码分析","category":"Java","tag":["Java集合"],"description":"PriorityQueue 简介 PriorityQueue 是 Java 中的一种队列数据结构，被称为 优先级队列 。它和普通队列不同，普通队列都是遵循先进先出（FIFO）的原则，即先添加的元素先出队，后添加的元素后出队。而 PriorityQueue 则是按照元素的优先级来决定出队的顺序，默认情况下，优先级越小的元素越优先出队。 队列 如下图所示，...","head":[["meta",{"property":"og:url","content":"https://ujava.cn/java/collection/priorityqueue-source-code.html"}],["meta",{"property":"og:site_name","content":"ujava"}],["meta",{"property":"og:title","content":"PriorityQueue 源码分析"}],["meta",{"property":"og:description","content":"PriorityQueue 简介 PriorityQueue 是 Java 中的一种队列数据结构，被称为 优先级队列 。它和普通队列不同，普通队列都是遵循先进先出（FIFO）的原则，即先添加的元素先出队，后添加的元素后出队。而 PriorityQueue 则是按照元素的优先级来决定出队的顺序，默认情况下，优先级越小的元素越优先出队。 队列 如下图所示，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-21T03:27:17.000Z"}],["meta",{"property":"article:author","content":"ujava"}],["meta",{"property":"article:tag","content":"Java集合"}],["meta",{"property":"article:modified_time","content":"2023-09-21T03:27:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PriorityQueue 源码分析\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-21T03:27:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ujava\\",\\"url\\":\\"https://ujava.cn\\"}]}"]]},"headers":[{"level":2,"title":"PriorityQueue 简介","slug":"priorityqueue-简介","link":"#priorityqueue-简介","children":[]},{"level":2,"title":"手写一个 PriorityQueue","slug":"手写一个-priorityqueue","link":"#手写一个-priorityqueue","children":[{"level":3,"title":"二叉堆简介","slug":"二叉堆简介","link":"#二叉堆简介","children":[]},{"level":3,"title":"基于 JDK 动态数组实现二叉堆","slug":"基于-jdk-动态数组实现二叉堆","link":"#基于-jdk-动态数组实现二叉堆","children":[]},{"level":3,"title":"基于二叉堆实现一个 PriorityQueue","slug":"基于二叉堆实现一个-priorityqueue","link":"#基于二叉堆实现一个-priorityqueue","children":[]}]},{"level":2,"title":"JDK 自带 PriorityQueue 使用示例","slug":"jdk-自带-priorityqueue-使用示例","link":"#jdk-自带-priorityqueue-使用示例","children":[{"level":3,"title":"基本类型优先队列","slug":"基本类型优先队列","link":"#基本类型优先队列","children":[]},{"level":3,"title":"特殊类型优先队列","slug":"特殊类型优先队列","link":"#特殊类型优先队列","children":[]}]},{"level":2,"title":"JDK 自带 PriorityQueue 源码分析","slug":"jdk-自带-priorityqueue-源码分析","link":"#jdk-自带-priorityqueue-源码分析","children":[{"level":3,"title":"构造函数","slug":"构造函数","link":"#构造函数","children":[]},{"level":3,"title":"入队操作","slug":"入队操作","link":"#入队操作","children":[]},{"level":3,"title":"出队操作","slug":"出队操作","link":"#出队操作","children":[]},{"level":3,"title":"查看优先级最高的元素","slug":"查看优先级最高的元素","link":"#查看优先级最高的元素","children":[]}]},{"level":2,"title":"Leetcode 中关于 PriorityQueue 的使用","slug":"leetcode-中关于-priorityqueue-的使用","link":"#leetcode-中关于-priorityqueue-的使用","children":[{"level":3,"title":"问题","slug":"问题","link":"#问题","children":[]},{"level":3,"title":"实现思路","slug":"实现思路","link":"#实现思路","children":[]}]},{"level":2,"title":"PriorityQueue 常见面试题","slug":"priorityqueue-常见面试题","link":"#priorityqueue-常见面试题","children":[{"level":3,"title":"PriorityQueue 为什么要用二叉堆实现，二叉堆有什么使用优势吗？","slug":"priorityqueue-为什么要用二叉堆实现-二叉堆有什么使用优势吗","link":"#priorityqueue-为什么要用二叉堆实现-二叉堆有什么使用优势吗","children":[]},{"level":3,"title":"PriorityQueue 是线程安全的吗？","slug":"priorityqueue-是线程安全的吗","link":"#priorityqueue-是线程安全的吗","children":[]},{"level":3,"title":"PriorityQueue 底层是用什么实现的？初始化容量是多少？","slug":"priorityqueue-底层是用什么实现的-初始化容量是多少","link":"#priorityqueue-底层是用什么实现的-初始化容量是多少","children":[]},{"level":3,"title":"如果我希望 PriorityQueue 按照从大到小的顺序排序要怎么做？","slug":"如果我希望-priorityqueue-按照从大到小的顺序排序要怎么做","link":"#如果我希望-priorityqueue-按照从大到小的顺序排序要怎么做","children":[]},{"level":3,"title":"为什么 PriorityQueue 底层用数组构成小顶堆而不是使用链表呢？","slug":"为什么-priorityqueue-底层用数组构成小顶堆而不是使用链表呢","link":"#为什么-priorityqueue-底层用数组构成小顶堆而不是使用链表呢","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1695266837000,"updatedTime":1695266837000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":1}]},"readingTime":{"minutes":30.1,"words":9030},"filePathRelative":"java/collection/priorityqueue-source-code.md","localizedDate":"2023年9月21日","autoDesc":true}');export{e as data};
