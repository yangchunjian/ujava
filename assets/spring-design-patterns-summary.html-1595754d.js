const e=JSON.parse('{"key":"v-ea10cfee","path":"/system-design/framework/spring/spring-design-patterns-summary.html","title":"Spring 中的设计模式详解","lang":"zh-CN","frontmatter":{"title":"Spring 中的设计模式详解","category":"框架","tag":["Spring"],"description":"“JDK 中用到了哪些设计模式? Spring 中用到了哪些设计模式? ”这两个问题，在面试中比较常见。 我在网上搜索了一下关于 Spring 中设计模式的讲解几乎都是千篇一律，而且大部分都年代久远。所以，花了几天时间自己总结了一下。 由于我的个人能力有限，文中如有任何错误各位都可以指出。另外，文章篇幅有限，对于设计模式以及一些源码的解读我只是一笔带过...","head":[["meta",{"property":"og:url","content":"https://ujava.cn/system-design/framework/spring/spring-design-patterns-summary.html"}],["meta",{"property":"og:site_name","content":"ujava"}],["meta",{"property":"og:title","content":"Spring 中的设计模式详解"}],["meta",{"property":"og:description","content":"“JDK 中用到了哪些设计模式? Spring 中用到了哪些设计模式? ”这两个问题，在面试中比较常见。 我在网上搜索了一下关于 Spring 中设计模式的讲解几乎都是千篇一律，而且大部分都年代久远。所以，花了几天时间自己总结了一下。 由于我的个人能力有限，文中如有任何错误各位都可以指出。另外，文章篇幅有限，对于设计模式以及一些源码的解读我只是一笔带过..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-21T03:27:17.000Z"}],["meta",{"property":"article:author","content":"ujava"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:modified_time","content":"2023-09-21T03:27:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring 中的设计模式详解\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-21T03:27:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ujava\\",\\"url\\":\\"https://ujava.cn\\"}]}"]]},"headers":[{"level":2,"title":"控制反转(IoC)和依赖注入(DI)","slug":"控制反转-ioc-和依赖注入-di","link":"#控制反转-ioc-和依赖注入-di","children":[]},{"level":2,"title":"工厂设计模式","slug":"工厂设计模式","link":"#工厂设计模式","children":[]},{"level":2,"title":"单例设计模式","slug":"单例设计模式","link":"#单例设计模式","children":[]},{"level":2,"title":"代理设计模式","slug":"代理设计模式","link":"#代理设计模式","children":[{"level":3,"title":"代理模式在 AOP 中的应用","slug":"代理模式在-aop-中的应用","link":"#代理模式在-aop-中的应用","children":[]},{"level":3,"title":"Spring AOP 和 AspectJ AOP 有什么区别?","slug":"spring-aop-和-aspectj-aop-有什么区别","link":"#spring-aop-和-aspectj-aop-有什么区别","children":[]}]},{"level":2,"title":"模板方法","slug":"模板方法","link":"#模板方法","children":[]},{"level":2,"title":"观察者模式","slug":"观察者模式","link":"#观察者模式","children":[{"level":3,"title":"Spring 事件驱动模型中的三种角色","slug":"spring-事件驱动模型中的三种角色","link":"#spring-事件驱动模型中的三种角色","children":[]},{"level":3,"title":"Spring 的事件流程总结","slug":"spring-的事件流程总结","link":"#spring-的事件流程总结","children":[]}]},{"level":2,"title":"适配器模式","slug":"适配器模式","link":"#适配器模式","children":[{"level":3,"title":"Spring AOP 中的适配器模式","slug":"spring-aop-中的适配器模式","link":"#spring-aop-中的适配器模式","children":[]},{"level":3,"title":"Spring MVC 中的适配器模式","slug":"spring-mvc-中的适配器模式","link":"#spring-mvc-中的适配器模式","children":[]}]},{"level":2,"title":"装饰者模式","slug":"装饰者模式","link":"#装饰者模式","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1695266837000,"updatedTime":1695266837000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":1}]},"readingTime":{"minutes":14.51,"words":4353},"filePathRelative":"system-design/framework/spring/spring-design-patterns-summary.md","localizedDate":"2023年9月21日","autoDesc":true}');export{e as data};
