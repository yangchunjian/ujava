const t=JSON.parse('{"key":"v-70bbc38f","path":"/design/action/command.html","title":"命令模式","lang":"zh-CN","frontmatter":{"title":"命令模式","index":false,"icon":"laptop-code","category":["设计模式"],"description":"概述 命令模式是一种行为设计模式，它允许将请求封装为一个对象，从而使不同的请求可以使用不同的参数进行参数化，队列或日志请求，以及支持可撤销的操作。 在Java中，命令模式的实现通常涉及一个命令接口和一个或多个具体命令类，这些类实现了命令接口，并在其execute()方法中定义了实际的命令逻辑。 此外，命令模式还可能涉及一个调用者类，该类将一个或多个命令...","head":[["meta",{"property":"og:url","content":"https://ujava.cn/design/action/command.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"命令模式"}],["meta",{"property":"og:description","content":"概述 命令模式是一种行为设计模式，它允许将请求封装为一个对象，从而使不同的请求可以使用不同的参数进行参数化，队列或日志请求，以及支持可撤销的操作。 在Java中，命令模式的实现通常涉及一个命令接口和一个或多个具体命令类，这些类实现了命令接口，并在其execute()方法中定义了实际的命令逻辑。 此外，命令模式还可能涉及一个调用者类，该类将一个或多个命令..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-27T00:33:41.000Z"}],["meta",{"property":"article:author","content":"ujava"}],["meta",{"property":"article:modified_time","content":"2023-09-27T00:33:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"命令模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-27T00:33:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ujava\\",\\"url\\":\\"https://ujava.cn\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]}],"git":{"createdTime":1695774821000,"updatedTime":1695774821000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":1}]},"readingTime":{"minutes":0.75,"words":225},"filePathRelative":"design/action/command.md","localizedDate":"2023年9月27日","autoDesc":true}');export{t as data};
