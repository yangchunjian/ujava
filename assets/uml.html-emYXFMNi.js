const e=JSON.parse('{"key":"v-25bbc779","path":"/java/uml.html","title":"Java UML类图","lang":"zh-CN","frontmatter":{"title":"Java UML类图","category":"Java","icon":"laptop-code","tag":["设计Java"],"description":"面向对象概念 面向对象是一种更优秀的程序设计方法，它的基本思想是使用类、对象、继承、封装、消息等基本概念进行程序设计。 它从现实世界中客观存在的事物出发来构造软件系统，并在系统构造中尽可能运用人类的自然思维方式，强调直接以现实世界中的事物为中心来思考，认识问题，并根据这些事物的本质特点，把它们抽象地表示为系统中的类，作为系统的基本构成单元，这使得软件系...","head":[["meta",{"property":"og:url","content":"https://ujava.cn/java/uml.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"Java UML类图"}],["meta",{"property":"og:description","content":"面向对象概念 面向对象是一种更优秀的程序设计方法，它的基本思想是使用类、对象、继承、封装、消息等基本概念进行程序设计。 它从现实世界中客观存在的事物出发来构造软件系统，并在系统构造中尽可能运用人类的自然思维方式，强调直接以现实世界中的事物为中心来思考，认识问题，并根据这些事物的本质特点，把它们抽象地表示为系统中的类，作为系统的基本构成单元，这使得软件系..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-30T01:34:07.000Z"}],["meta",{"property":"article:author","content":"ujava"}],["meta",{"property":"article:tag","content":"设计Java"}],["meta",{"property":"article:modified_time","content":"2024-01-30T01:34:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java UML类图\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-30T01:34:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ujava\\",\\"url\\":\\"https://ujava.cn\\"}]}"]]},"headers":[{"level":2,"title":"面向对象概念","slug":"面向对象概念","link":"#面向对象概念","children":[{"level":3,"title":"扩展：面向功能概念","slug":"扩展-面向功能概念","link":"#扩展-面向功能概念","children":[]}]},{"level":2,"title":"面向对象的三大特性","slug":"面向对象的三大特性","link":"#面向对象的三大特性","children":[]},{"level":2,"title":"封装","slug":"封装","link":"#封装","children":[{"level":3,"title":"封装的实现","slug":"封装的实现","link":"#封装的实现","children":[]}]},{"level":2,"title":"继承","slug":"继承","link":"#继承","children":[{"level":3,"title":"继承的实现","slug":"继承的实现","link":"#继承的实现","children":[]},{"level":3,"title":"C++和Java继承区别","slug":"c-和java继承区别","link":"#c-和java继承区别","children":[]}]},{"level":2,"title":"多态","slug":"多态","link":"#多态","children":[{"level":3,"title":"多态的实现","slug":"多态的实现","link":"#多态的实现","children":[]}]},{"level":2,"title":"类(对象)之间的关系","slug":"类-对象-之间的关系","link":"#类-对象-之间的关系","children":[{"level":3,"title":"UML类图","slug":"uml类图","link":"#uml类图","children":[]},{"level":3,"title":"泛化关系 (Generalization)","slug":"泛化关系-generalization","link":"#泛化关系-generalization","children":[]},{"level":3,"title":"实现关系 (Realization)","slug":"实现关系-realization","link":"#实现关系-realization","children":[]},{"level":3,"title":"聚合关系 (Aggregation)","slug":"聚合关系-aggregation","link":"#聚合关系-aggregation","children":[]},{"level":3,"title":"组合关系 (Composition)","slug":"组合关系-composition","link":"#组合关系-composition","children":[]},{"level":3,"title":"关联关系 (Association)","slug":"关联关系-association","link":"#关联关系-association","children":[]},{"level":3,"title":"依赖关系 (Dependency)","slug":"依赖关系-dependency","link":"#依赖关系-dependency","children":[]}]}],"git":{"createdTime":1706578447000,"updatedTime":1706578447000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":1}]},"readingTime":{"minutes":10.57,"words":3171},"filePathRelative":"java/uml.md","localizedDate":"2024年1月30日","autoDesc":true}');export{e as data};
