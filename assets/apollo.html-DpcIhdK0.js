import{_ as s,c as a,a as n,o as l}from"./app-CZKXz-g7.js";const t="/assets/img_193-BUgnq48T.png",e="/assets/img_194-Bgj-lnS-.png",p="/assets/img_195-DnEClgcC.png",h="/assets/img_196-Cmn_zLLV.png",r="/assets/img_197-CqEKKWOy.png",k="/assets/img_198-B-Rm-pKx.png",g="/assets/img_199-Dul5ZBgz.png",d="/assets/img_200-TD8cbOdt.png",o="/assets/img_201-Ctu1pA-2.png",c="/assets/img_202-CdpgvkZ4.png",A="/assets/img_203-Ctn3mJZs.png",B="/assets/img_204-BovyTdbY.png",y="/assets/img_205-DUoaS_tY.png",m="/assets/img_206-CLGll2WF.png",v="/assets/img_207-jJIssV52.png",b="/assets/img_208-CuOhyl3R.png",u="/assets/img_209-ByENiPdM.png",C="/assets/img_209-ByENiPdM.png",_="/assets/img_211-C2TSdQap.png",E="/assets/img_212-BzT91bHo.png",F="/assets/img_213-BJDwfufm.png",f="/assets/img_214-DG_rL0Yr.png",x="/assets/img_215-BPUKv7B1.png",j="/assets/img_216-NMxj7vrK.png",S="/assets/img_217-k3NJTlrh.png",D="/assets/img_218-D2pcDrd_.png",z="/assets/img_219-BZGEEFKh.png",M="/assets/img_220-KZ2nVlgx.png",P={};function q(I,i){return l(),a("div",null,i[0]||(i[0]=[n('<h2 id="思维导图" tabindex="-1"><a class="header-anchor" href="#思维导图"><span><strong>思维导图</strong></span></a></h2><figure><img src="'+t+'" alt="img_193.png" tabindex="0" loading="lazy"><figcaption>img_193.png</figcaption></figure><h2 id="一、概述" tabindex="-1"><a class="header-anchor" href="#一、概述"><span><strong>一、概述</strong></span></a></h2><p>Apollo（阿波罗）是携程框架部门研发的开源配置管理中心，能够集中化管理应用<strong>不同环境、不同集群</strong>的配置，配置修改后能够<strong>实时推送到应用端，并且具备规范的权限、流程治理</strong>等特性。部署是区分环境的 设置不同的namespace，作用不同，类似不同的property文件 key、value对应关系，替换工程变量值。</p><p>目前Apollo在github有22.6k颗星，在官网登记的使用的公司有451家，算是很流行的配置中心的框架技术。所以接下来跟着我一起学习Apollo配置中心吧。<br><img src="'+e+'" alt="img_194.png" loading="lazy"></p><h2 id="二、为什么使用配置中心" tabindex="-1"><a class="header-anchor" href="#二、为什么使用配置中心"><span><strong>二、为什么使用配置中心</strong></span></a></h2><p>首先，没有配置中心之前传统的配置都是写在配置文件中，比如各种yml、perproties、xml文件。</p><p>写在各种文件里最大的问题在于<strong>如果需要改配置信息，需要重新部署发布应用才能生效</strong>，这是第一个问题。</p><p>后面为了做到动态读取配置信息，后面有人改进一下把配置信息存储在数据库的一张表，程序读取表中的配置信息，这种方式很多公司都还在使用，因为简单，而且灵活(修改配置只需要执行个SQL语句，不需要重新部署发布)。但是也不是最完美的，因为<strong>缺少了权限控制，没有管理界面进行统一配置，没有历史版本的配置信息，不支持回滚(防止误操作)</strong>。</p><p>实际上配置中心在市面上已经有很多，比如Nacos、Consul、spring-cloud-config、Apollo等等。</p><p>相对其他的，我觉得选择Apollo的原因是，界面比较美观，操作简便，部署简单，依赖较少，开箱即用。</p><h2 id="三、安装部署" tabindex="-1"><a class="header-anchor" href="#三、安装部署"><span><strong>三、安装部署</strong></span></a></h2><h3 id="_3-1-获取安装包" tabindex="-1"><a class="header-anchor" href="#_3-1-获取安装包"><span><strong>3.1 获取安装包</strong></span></a></h3><p>先到官网下载安装包。<br><img src="'+p+'" alt="img_195.png" loading="lazy"></p><p>下载后解压，如下：<br><img src="'+h+'" alt="img_196.png" loading="lazy"></p><h3 id="_3-2-创建数据库" tabindex="-1"><a class="header-anchor" href="#_3-2-创建数据库"><span><strong>3.2 创建数据库</strong></span></a></h3><p>使用MySQL数据库(版本要求:5.6.5+)。</p><h4 id="_3-2-1-创建apolloportaldb数据库" tabindex="-1"><a class="header-anchor" href="#_3-2-1-创建apolloportaldb数据库"><span><strong>3.2.1 创建ApolloPortalDB数据库</strong></span></a></h4><p>使用github上面的sql脚本创建ApolloPortalDB数据库，导入相关的表以及数据。<br><img src="'+r+'" alt="img_197.png" loading="lazy"></p><h4 id="_3-2-2-创建apolloconfigdb数据库" tabindex="-1"><a class="header-anchor" href="#_3-2-2-创建apolloconfigdb数据库"><span><strong>3.2.2 创建ApolloConfigDB数据库</strong></span></a></h4><p>使用github上面的sql脚本创建ApolloConfigDB数据库，导入相关的表以及数据。<br><img src="'+k+`" alt="img_198.png" loading="lazy"></p><h3 id="_3-3-修改配置" tabindex="-1"><a class="header-anchor" href="#_3-3-修改配置"><span><strong>3.3 修改配置</strong></span></a></h3><p>需要改一下数据库连接信息，路径在/config下。</p><h4 id="_3-3-1-apollo-configservice配置" tabindex="-1"><a class="header-anchor" href="#_3-3-1-apollo-configservice配置"><span><strong>3.3.1 apollo-configservice配置</strong></span></a></h4><p>修改apollo-configservice的数据库连接信息application-github.properties，如下：</p><p>代码语言：javascript</p><p>复制</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">DataSource</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">datasource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> jdbc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">mysql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//192.168.0.107:3306/ApolloConfigDB?characterEncoding=utf8</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">datasource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">username</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 账号</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">datasource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">password</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 密码</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-3-2-apollo-adminservice配置" tabindex="-1"><a class="header-anchor" href="#_3-3-2-apollo-adminservice配置"><span><strong>3.3.2 apollo-adminservice配置</strong></span></a></h4><p>修改apollo-adminservice的数据库连接信息application-github.properties，如下：</p><p>代码语言：javascript</p><p>复制</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">DataSource</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">datasource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> jdbc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">mysql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//192.168.0.107:3306/ApolloConfigDB?characterEncoding=utf8</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">datasource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">username</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 账号</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">datasource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">password</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 密码</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-3-3-apollo-portal配置" tabindex="-1"><a class="header-anchor" href="#_3-3-3-apollo-portal配置"><span><strong>3.3.3 apollo-portal配置</strong></span></a></h4><p>修改apollo-portal的数据库连接信息application-github.properties，如下：</p><p>代码语言：javascript</p><p>复制</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">DataSource</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">datasource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> jdbc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">mysql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//192.168.0.107:3306/ApolloPortalDB?characterEncoding=utf8</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">datasource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">username</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 账号</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">datasource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">password</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 密码</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再修改apollo-env.properties配置，这是关于环境配置的，如下：</p><p>代码语言：javascript</p><p>复制</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">local</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//localhost:8080</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">## 开发环境</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">dev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//192.168.0.107:8080</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">## 不需要配置的环境参考</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">lpt_meta</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">配置</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">fat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">fat_meta</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">uat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">uat_meta</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">lpt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">lpt_meta</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">pro</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">pro_meta</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-部署" tabindex="-1"><a class="header-anchor" href="#_3-4-部署"><span><strong>3.4 部署</strong></span></a></h3><p>然后把三个文件夹都上传到Linux服务器。<br><img src="`+g+'" alt="img_199.png" loading="lazy"></p><h4 id="_3-4-1-部署发布apollo-configservice" tabindex="-1"><a class="header-anchor" href="#_3-4-1-部署发布apollo-configservice"><span><strong>3.4.1 部署发布apollo-configservice</strong></span></a></h4><p>部署发布服务有顺序，首先发布apollo-configservice，直接执行scripts/startup.sh。<br><img src="'+d+'" alt="img_200.png" loading="lazy"></p><p>有可能会出现这个错误(我就出现了)，不用担心，实际上进程还没有结束，还在启动，我们可以到日志记录的文件夹(下图来源于startup.sh脚本)查看日志。<br><img src="'+o+'" alt="img_201.png" loading="lazy"></p><p>启动时间比较长，因为这个服务包括启动Eureka注册中心，需要耐心等待。观察apollo-configservice.log文件，当看到如下信息后，表示启动成功。<br><img src="'+c+'" alt="img_202.png" loading="lazy"></p><p>Eureka注册中心启动成功，可以打开<a href="http://192.168.0.107:8080/%E6%9F%A5%E7%9C%8B%EF%BC%9A" target="_blank" rel="noopener noreferrer">http://192.168.0.107:8080/查看：</a><br><img src="'+A+'" alt="img_203.png" loading="lazy"></p><h4 id="_3-4-2-部署发布apollo-adminservice" tabindex="-1"><a class="header-anchor" href="#_3-4-2-部署发布apollo-adminservice"><span><strong>3.4.2 部署发布apollo-adminservice</strong></span></a></h4><p>接着发布apollo-adminservice，直接执行scripts/startup.sh。查看日志的方式跟上面一样。启动成功后，可以看到Eureka的服务列表中多了一个服务。<br><img src="'+B+'" alt="img_204.png" loading="lazy"></p><h4 id="_3-4-3-部署发布apollo-portal" tabindex="-1"><a class="header-anchor" href="#_3-4-3-部署发布apollo-portal"><span><strong>3.4.3 部署发布apollo-portal</strong></span></a></h4><p>接着发布apollo-portal，直接执行scripts/startup.sh。portal是提供Web界面的服务，所以启动成功后，可以打开<a href="http://192.168.0.107:8070/%E7%99%BB%E5%BD%95web%E7%95%8C%E9%9D%A2%EF%BC%8C%E9%BB%98%E8%AE%A4%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81%E6%98%AFapollo/admin%E3%80%82" target="_blank" rel="noopener noreferrer">http://192.168.0.107:8070/登录web界面，默认账号密码是apollo/admin。</a><br><img src="'+y+'" alt="img_205.png" loading="lazy"><br><img src="'+m+`" alt="img_206.png" loading="lazy"></p><p>到此，安装就完成了！</p><h2 id="四、springboot整合apollo" tabindex="-1"><a class="header-anchor" href="#四、springboot整合apollo"><span><strong>四、SpringBoot整合Apollo</strong></span></a></h2><p>接下来，整一个Demo(相当于java客户端)，使用SpringBoot整合Apollo，实现动态读取配置。</p><h3 id="_4-1-mave依赖" tabindex="-1"><a class="header-anchor" href="#_4-1-mave依赖"><span><strong>4.1 Mave依赖</strong></span></a></h3><p>代码语言：javascript</p><p>复制</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;com.ctrip.framework.apollo&lt;/</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;apollo-client&lt;/</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;1.1.0&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-appid" tabindex="-1"><a class="header-anchor" href="#_4-2-appid"><span><strong>4.2 AppId</strong></span></a></h3><p>在classpath路径下，创建/META-INF/app.properties文件。如下：</p><p>代码语言：javascript</p><p>复制</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># 应用的唯一标识，后面创建工程需要用到</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">id</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">apollo</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">demo</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-apollo-meta-server" tabindex="-1"><a class="header-anchor" href="#_4-3-apollo-meta-server"><span><strong>4.3 Apollo Meta Server</strong></span></a></h3><p>其实就是配置Apollo服务器的地址。官网提供的方式有很多，我这里选其中一种比较简单的方式。在classpath路径下创建apollo-env.properties文件，配置如下：</p><p>代码语言：javascript</p><p>复制</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">dev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//192.168.0.107:8080</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">fat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//apollo.fat.xxx.com</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">uat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//apollo.uat.xxx.com</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">pro</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//apollo.xxx.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-environment" tabindex="-1"><a class="header-anchor" href="#_4-4-environment"><span><strong>4.4 Environment</strong></span></a></h3><p>其实是配置环境，因为上面可以配置四种环境，这里配置具体选择哪个环境。这里介绍两种方式：</p><p>第一种通过Java System Property。<br><img src="`+v+'" alt="img_207.png" loading="lazy"></p><p>第二种通过配置文件。<br><img src="'+b+`" alt="img_208.png" loading="lazy"></p><p>到相对应的路径下创建server.properties，配置如下：</p><p>代码语言：javascript</p><p>复制</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">env</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;">DEV</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4-5-enableapolloconfig" tabindex="-1"><a class="header-anchor" href="#_4-5-enableapolloconfig"><span><strong>4.5 @EnableApolloConfig</strong></span></a></h3><p>在启动类上加上注解@EnableApolloConfig。</p><p>代码语言：javascript</p><p>复制</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">SpringBootApplication</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//开启apollo配置</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">EnableApolloConfig</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ApolloDemoApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        SpringApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">ApolloDemoApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-6-测试类" tabindex="-1"><a class="header-anchor" href="#_4-6-测试类"><span><strong>4.6 测试类</strong></span></a></h3><p>这样就完成了，接下来再创建一个Controller进行测试一下。</p><p>代码语言：javascript</p><p>复制</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">RestController</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ApolloController</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    //冒号后面的是默认值</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${configValue:default}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> configValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RequestMapping</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/apollo/getConfig&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> getConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> configValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-7-管理界面创建对应的配置" tabindex="-1"><a class="header-anchor" href="#_4-7-管理界面创建对应的配置"><span><strong>4.7 管理界面创建对应的配置</strong></span></a></h3><p>第一步，创建项目。<br><img src="`+u+'" alt="img_209.png" loading="lazy"><br><img src="'+C+'" alt="img_210.png" loading="lazy"></p><p>第二步，创建配置。<br><img src="'+_+'" alt="img_211.png" loading="lazy"></p><p>第三步，发布。<br><img src="'+E+'" alt="img_212.png" loading="lazy"></p><h3 id="_4-8-测试" tabindex="-1"><a class="header-anchor" href="#_4-8-测试"><span><strong>4.8 测试</strong></span></a></h3><p>启动项目apollo-demo，然后请求路径<a href="http://localhost:8888/apollo/getConfig%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E9%A1%B5%E9%9D%A2%E3%80%82" target="_blank" rel="noopener noreferrer">http://localhost:8888/apollo/getConfig，可以看到页面。</a></p><p>控制台可以看到推送配置信息的日志：<br><img src="'+F+'" alt="img_213.png" loading="lazy"></p><h2 id="五、架构设计" tabindex="-1"><a class="header-anchor" href="#五、架构设计"><span><strong>五、架构设计</strong></span></a></h2><p>讲完了安装和SpringBoot整合的demo后，我们是时候探究一下原理，为什么要有三个服务，又是如何做到配置信息发布后，客户端实时获取到最新的配置的。继续往下看。</p><p>首先看一张官网的架构设计图。</p><h3 id="_5-1-基础模型" tabindex="-1"><a class="header-anchor" href="#_5-1-基础模型"><span><strong>5.1 基础模型</strong></span></a></h3><p>作者在官网上有个基础模型的架构图，忽略掉很多细节后实际上非常简单：<br><img src="'+f+'" alt="img_214.png" loading="lazy"></p><ol><li>用户在配置中心对配置进行修改并发布。</li><li>配置中心通知Apollo客户端有配置更新。</li><li>Apollo客户端从配置中心拉取最新的配置、更新本地配置并通知到应用。</li></ol><h3 id="_5-2-架构模块" tabindex="-1"><a class="header-anchor" href="#_5-2-架构模块"><span><strong>5.2 架构模块</strong></span></a></h3><p>如果我们把Apollo配置中心服务端展开的话，架构图如下：<br><img src="'+x+'" alt="img_215.png" loading="lazy"></p><p>看到这里，整个架构看起来就比较清晰了。接下来从上往下简单介绍一下：</p><p><strong>Portal服务</strong>：提供Web界面供用户管理配置，通过MetaServer获取AdminService服务列表（IP+Port），通过IP+Port访问AdminService服务。</p><p><strong>Client</strong>：实际上就是我们创建的SpringBoot项目，引入ApolloClient的maven依赖，为应用提供配置获取、实时更新等功能。</p><p><strong>Meta Server</strong>：从Eureka获取Config Service和Admin Service的服务信息，相当于是一个Eureka Client。主要是为了封装服务发现的细节，对Portal和Client而言，永远通过一个Http接口获取Admin Service和Config Service的服务信息，而不需要关心背后实际的服务注册和发现组件。Meta Server只是一个逻辑角色，在部署时和Config Service是在一个JVM进程中的，所以IP、端口和Config Service一致。</p><p><strong>Eureka</strong>：注册中心。Config Service和Admin Service会向Eureka注册服务。为了简单起见，目前Eureka在部署时和Config Service是在一个JVM进程中的。</p><p><strong>Config Service</strong>：提供配置获取接口。提供配置更新推送接口(基于Http long polling)。服务对象为Apollo客户端(Client)。</p><p><strong>Admin Service</strong>：提供配置管理接口。提供配置发布、修改等接口。服务对象为Portal。</p><h3 id="_5-3-配置发布后的实时推送设计" tabindex="-1"><a class="header-anchor" href="#_5-3-配置发布后的实时推送设计"><span><strong>5.3 配置发布后的实时推送设计</strong></span></a></h3><p>上面讲完各个角色的用途，那这些角色是怎么配合一起工作的呢，我们来看一张图：<br><img src="'+j+'" alt="img_216.png" loading="lazy"></p><p>上图简要描述了配置发布的大致过程：</p><ol><li>用户在Portal操作配置发布。</li><li>Portal调用Admin Service的接口操作发布。</li><li>Admin Service发布配置后，发送ReleaseMessage给各个Config Service。</li><li>Config Service收到ReleaseMessage后，通知对应的客户端(Client)。</li></ol><p>关键点在于AdminService发送ReleaseMessage给ConfigService，这一步是如何异步发送的呢，一般异步发送我们很容易想到消息队列，但是实际上我们在安装部署时并没有使用到消息队列。</p><p>答案在于：</p><ul><li>Admin Service在配置发布后会往ReleaseMessage表插入一条消息记录，消息内容就是配置发布的AppId+Cluster+Namespace。</li><li>然后Config Service有一个线程会每秒扫描一次ReleaseMessage表，看看是否有新的消息记录。</li><li>Config Service如果发现有新的消息记录，那么就会通知到所有的消息监听器，监听器得到配置发布的AppId+Cluster+Namespace后，会通知对应的客户端。<br><img src="'+S+'" alt="img_217.png" loading="lazy"></li></ul><blockquote><p>在实现上，考虑到Apollo的实际使用场景，以及为了尽可能减少外部依赖，我们没有采用外部的消息中间件，而是通过数据库实现了一个简单的消息队列。----来自官网</p></blockquote><h3 id="_5-4-高可用" tabindex="-1"><a class="header-anchor" href="#_5-4-高可用"><span><strong>5.4 高可用</strong></span></a></h3><p>Apollo为了实现高可用，服务端使用了Eureka作为注册中心，这一点在官网也有谈到。<br><img src="'+D+'" alt="img_218.png" loading="lazy"></p><p>除此之外，客户端也做了高可用的一些架构设计，比如本地文件缓存。<br><img src="'+z+'" alt="img_219.png" loading="lazy"></p><p>这个缓存文件默认就放在C:\\opt\\data\\apollo-demo\\config-cache路径下：<br><img src="'+M+'" alt="img_220.png" loading="lazy"></p><p>这个文件的作用是，在遇到服务不可用，或网络不通的时候，依然能从本地恢复配置。</p><h2 id="六、絮叨" tabindex="-1"><a class="header-anchor" href="#六、絮叨"><span><strong>六、絮叨</strong></span></a></h2><p>这篇文章就讲到这里。其实Apollo配置中心算是一个比较容易上手，架构相对比较清晰的开源项目。目前很多互联网公司都在推行微服务架构，在使用微服务的架构时，配置信息就会成倍数增加，因为配置实际上代表的是“控制”，很多时候程序的运行是靠配置去决定行为的，而且要能实时生效的，所以就必须要有个配置中心。</p><p>有些公司体量大一些会自己公司开发一套配置中心，其实实现起来也不是特别难，我上一间公司就自己实现，使用MQ消息队列+数据库，再自己简单地搭了一个增删改查、刷新配置的web页面，就完成了一个配置中心。</p>',126)]))}const N=s(P,[["render",q],["__file","apollo.html.vue"]]),V=JSON.parse('{"path":"/assembly/apollo.html","title":"组件Apollo","lang":"zh-CN","frontmatter":{"title":"组件Apollo","icon":"laptop-code","category":["设计组件"],"tag":["组件"],"description":"思维导图 img_193.pngimg_193.png 一、概述 Apollo（阿波罗）是携程框架部门研发的开源配置管理中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性。部署是区分环境的 设置不同的namespace，作用不同，类似不同的property文件 key、value对应关系...","head":[["meta",{"property":"og:url","content":"https://ujava.cn/assembly/apollo.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"组件Apollo"}],["meta",{"property":"og:description","content":"思维导图 img_193.pngimg_193.png 一、概述 Apollo（阿波罗）是携程框架部门研发的开源配置管理中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性。部署是区分环境的 设置不同的namespace，作用不同，类似不同的property文件 key、value对应关系..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-29T15:10:52.000Z"}],["meta",{"property":"article:tag","content":"组件"}],["meta",{"property":"article:modified_time","content":"2024-09-29T15:10:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"组件Apollo\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-29T15:10:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"UJava\\",\\"url\\":\\"https://ujava.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"思维导图","slug":"思维导图","link":"#思维导图","children":[]},{"level":2,"title":"一、概述","slug":"一、概述","link":"#一、概述","children":[]},{"level":2,"title":"二、为什么使用配置中心","slug":"二、为什么使用配置中心","link":"#二、为什么使用配置中心","children":[]},{"level":2,"title":"三、安装部署","slug":"三、安装部署","link":"#三、安装部署","children":[{"level":3,"title":"3.1 获取安装包","slug":"_3-1-获取安装包","link":"#_3-1-获取安装包","children":[]},{"level":3,"title":"3.2 创建数据库","slug":"_3-2-创建数据库","link":"#_3-2-创建数据库","children":[]},{"level":3,"title":"3.3 修改配置","slug":"_3-3-修改配置","link":"#_3-3-修改配置","children":[]},{"level":3,"title":"3.4 部署","slug":"_3-4-部署","link":"#_3-4-部署","children":[]}]},{"level":2,"title":"四、SpringBoot整合Apollo","slug":"四、springboot整合apollo","link":"#四、springboot整合apollo","children":[{"level":3,"title":"4.1 Mave依赖","slug":"_4-1-mave依赖","link":"#_4-1-mave依赖","children":[]},{"level":3,"title":"4.2 AppId","slug":"_4-2-appid","link":"#_4-2-appid","children":[]},{"level":3,"title":"4.3 Apollo Meta Server","slug":"_4-3-apollo-meta-server","link":"#_4-3-apollo-meta-server","children":[]},{"level":3,"title":"4.4 Environment","slug":"_4-4-environment","link":"#_4-4-environment","children":[]},{"level":3,"title":"4.5 @EnableApolloConfig","slug":"_4-5-enableapolloconfig","link":"#_4-5-enableapolloconfig","children":[]},{"level":3,"title":"4.6 测试类","slug":"_4-6-测试类","link":"#_4-6-测试类","children":[]},{"level":3,"title":"4.7 管理界面创建对应的配置","slug":"_4-7-管理界面创建对应的配置","link":"#_4-7-管理界面创建对应的配置","children":[]},{"level":3,"title":"4.8 测试","slug":"_4-8-测试","link":"#_4-8-测试","children":[]}]},{"level":2,"title":"五、架构设计","slug":"五、架构设计","link":"#五、架构设计","children":[{"level":3,"title":"5.1 基础模型","slug":"_5-1-基础模型","link":"#_5-1-基础模型","children":[]},{"level":3,"title":"5.2 架构模块","slug":"_5-2-架构模块","link":"#_5-2-架构模块","children":[]},{"level":3,"title":"5.3 配置发布后的实时推送设计","slug":"_5-3-配置发布后的实时推送设计","link":"#_5-3-配置发布后的实时推送设计","children":[]},{"level":3,"title":"5.4 高可用","slug":"_5-4-高可用","link":"#_5-4-高可用","children":[]}]},{"level":2,"title":"六、絮叨","slug":"六、絮叨","link":"#六、絮叨","children":[]}],"git":{"createdTime":1727621000000,"updatedTime":1727622652000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":3}]},"readingTime":{"minutes":9.38,"words":2813},"filePathRelative":"assembly/apollo.md","localizedDate":"2024年9月29日","excerpt":"<h2><strong>思维导图</strong></h2>\\n<figure><figcaption>img_193.png</figcaption></figure>\\n<h2><strong>一、概述</strong></h2>\\n<p>Apollo（阿波罗）是携程框架部门研发的开源配置管理中心，能够集中化管理应用<strong>不同环境、不同集群</strong>的配置，配置修改后能够<strong>实时推送到应用端，并且具备规范的权限、流程治理</strong>等特性。部署是区分环境的 设置不同的namespace，作用不同，类似不同的property文件 key、value对应关系，替换工程变量值。</p>","autoDesc":true}');export{N as comp,V as data};
