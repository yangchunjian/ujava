import{_ as n,o,c as a,b as e}from"./app-O_78To4l.js";const r={};function l(i,t){return o(),a("div",null,t[0]||(t[0]=[e("h2",{id:"概述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#概述"},[e("span",null,"概述")])],-1),e("p",null,"基于事件的异步模式提供了多线程应用程序的优势，同时隐藏了多线程设计中固有的许多复杂问题。使用支持此模式的类可以：",-1),e("ol",null,[e("li",null,"在“后台”执行耗时的任务，例如下载和数据库操作，而不会中断应用程序。"),e("li",null,"同时执行多个操作，每个操作完成后接收通知。"),e("li",null,"等待资源可用，而不停止（“挂起”）您的应用程序。"),e("li",null,"使用熟悉的事件和委托模型与挂起的异步操作进行通信。")],-1)]))}const p=n(r,[["render",l],["__file","eventasynchronous.html.vue"]]),s=JSON.parse('{"path":"/design/other/eventasynchronous.html","title":"事件异步模式","lang":"zh-CN","frontmatter":{"title":"事件异步模式","icon":"laptop-code","category":["设计模式"],"tag":["设计模式"],"description":"概述 基于事件的异步模式提供了多线程应用程序的优势，同时隐藏了多线程设计中固有的许多复杂问题。使用支持此模式的类可以： 在“后台”执行耗时的任务，例如下载和数据库操作，而不会中断应用程序。 同时执行多个操作，每个操作完成后接收通知。 等待资源可用，而不停止（“挂起”）您的应用程序。 使用熟悉的事件和委托模型与挂起的异步操作进行通信。","head":[["meta",{"property":"og:url","content":"https://ujava.cn/design/other/eventasynchronous.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"事件异步模式"}],["meta",{"property":"og:description","content":"概述 基于事件的异步模式提供了多线程应用程序的优势，同时隐藏了多线程设计中固有的许多复杂问题。使用支持此模式的类可以： 在“后台”执行耗时的任务，例如下载和数据库操作，而不会中断应用程序。 同时执行多个操作，每个操作完成后接收通知。 等待资源可用，而不停止（“挂起”）您的应用程序。 使用熟悉的事件和委托模型与挂起的异步操作进行通信。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-03T03:14:23.000Z"}],["meta",{"property":"article:author","content":"UJava"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:modified_time","content":"2024-03-03T03:14:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"事件异步模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-03T03:14:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"UJava\\",\\"url\\":\\"https://ujava.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]}],"git":{"createdTime":1709435663000,"updatedTime":1709435663000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":1}]},"readingTime":{"minutes":0.56,"words":169},"filePathRelative":"design/other/eventasynchronous.md","localizedDate":"2024年3月3日","excerpt":"<h2>概述</h2>\\n<p>基于事件的异步模式提供了多线程应用程序的优势，同时隐藏了多线程设计中固有的许多复杂问题。使用支持此模式的类可以：</p>\\n<ol>\\n<li>在“后台”执行耗时的任务，例如下载和数据库操作，而不会中断应用程序。</li>\\n<li>同时执行多个操作，每个操作完成后接收通知。</li>\\n<li>等待资源可用，而不停止（“挂起”）您的应用程序。</li>\\n<li>使用熟悉的事件和委托模型与挂起的异步操作进行通信。</li>\\n</ol>\\n","autoDesc":true}');export{p as comp,s as data};
