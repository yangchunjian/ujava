import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o,c,a as e,b as a}from"./app-7tr1E8KG.js";const r={},s=e("h2",{id:"概述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#概述","aria-hidden":"true"},"#"),a(" 概述")],-1),n=e("p",null,"当创建基类并从中继承的OOP概念不适用于当前情况时，类型对象模式就是我们使用的模式。当我们不知道预先需要什么类型，或者希望能够在不重复重新编译的情况下方便地修改或添加新类型时，就会发生这种情况。该模式提供了一种解决方案，允许通过创建一个类来灵活地创建所需的对象，该类具有一个表示对象“类型”的字段。",-1),_=[s,n];function d(i,l){return o(),c("div",null,_)}const m=t(r,[["render",d],["__file","typeobject.html.vue"]]);export{m as default};
