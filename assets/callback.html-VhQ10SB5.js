const e=JSON.parse('{"key":"v-18dc7548","path":"/principle/callback.html","title":"设计原理:回调","lang":"zh-CN","frontmatter":{"title":"设计原理:回调","index":false,"icon":"laptop-code","category":["设计原理"],"description":"简介 回调是强大的编程模式之一。 它可以实现调用反转，在子函数中调用高层的函数（通常是由高层函数来调用底层的子函数）， 获得更灵活的调用关系。通常用于框架、代码复用等场合。 在这里， 函数可以作为参数传入子函数，可以由子函数进行调用和返回。回调函数可以用 Java 的接口， 或者 C/C++ 的函数指针来实现， 而在 Javascript / LISP...","head":[["meta",{"property":"og:url","content":"https://ujava.cn/principle/callback.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"设计原理:回调"}],["meta",{"property":"og:description","content":"简介 回调是强大的编程模式之一。 它可以实现调用反转，在子函数中调用高层的函数（通常是由高层函数来调用底层的子函数）， 获得更灵活的调用关系。通常用于框架、代码复用等场合。 在这里， 函数可以作为参数传入子函数，可以由子函数进行调用和返回。回调函数可以用 Java 的接口， 或者 C/C++ 的函数指针来实现， 而在 Javascript / LISP..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-09T10:51:43.000Z"}],["meta",{"property":"article:author","content":"ujava"}],["meta",{"property":"article:modified_time","content":"2023-11-09T10:51:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设计原理:回调\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-09T10:51:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ujava\\",\\"url\\":\\"https://ujava.cn\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"动机","slug":"动机","link":"#动机","children":[]},{"level":2,"title":"缘起","slug":"缘起","link":"#缘起","children":[]},{"level":2,"title":"禁忌","slug":"禁忌","link":"#禁忌","children":[]}],"git":{"createdTime":1699527103000,"updatedTime":1699527103000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":1}]},"readingTime":{"minutes":2.89,"words":866},"filePathRelative":"principle/callback.md","localizedDate":"2023年11月9日","autoDesc":true}');export{e as data};
