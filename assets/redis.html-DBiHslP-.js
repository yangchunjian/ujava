import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,e as t}from"./app-bJBKEgh5.js";const p="/assets/img_84-WooQsgK0.png",o="/assets/img_83-21zD7JgF.png",e={},c=t(`<p>NoSQL:即Not-OnlySQL(泛指非关系型的数据库)，作为关系型数据库的补充。<br> 作用:应对基于海量用户和海量数据前提下的数据处理问题。</p><h2 id="redis介绍" tabindex="-1"><a class="header-anchor" href="#redis介绍" aria-hidden="true">#</a> Redis介绍</h2><h4 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h4><p>Redis(REmote DlctionaryServer)是用C语言开发的一个开源的高性能键值对(key-value)数据库</p><h4 id="特征" tabindex="-1"><a class="header-anchor" href="#特征" aria-hidden="true">#</a> 特征</h4><p>1.数据间没有必然的关联关系</p><p>2.内部采用单线程机制进行工作</p><p>3.高性能</p><p>4.支持多种数据类型</p><p>5.支持持久化，可以存硬盘。</p><h4 id="应用" tabindex="-1"><a class="header-anchor" href="#应用" aria-hidden="true">#</a> 应用</h4><p>热点信息，时效性信息，分布式数据共享，消息队列，即使信息查询。</p><h3 id="在虚拟机上启动redis服务" tabindex="-1"><a class="header-anchor" href="#在虚拟机上启动redis服务" aria-hidden="true">#</a> 在虚拟机上启动redis服务</h3><p>通过指定的配置文件启动redis服务，</p><ol><li>查看进程：ps -ef | grep redis</li><li>进入配置文件的目录cd /usr/local/redis/bin/</li><li>输入 ./redis-server redis.conf</li><li>输入 ./redis-cli</li><li>关闭服务并退出：shutdown 然后：exit</li></ol><h3 id="键值对" tabindex="-1"><a class="header-anchor" href="#键值对" aria-hidden="true">#</a> 键值对</h3><p>设置键值对</p><p>​ 语法：set key value</p><p>获取键值对</p><p>​ 语法：get key</p><p>判断键是否存在：exist key</p><p><strong>设置过期时间</strong>： expire key 时间</p><p>查看过期时间： ttl key</p><p>查看当前key的数据类型：&gt; type key</p><p>删除key：del key</p><h3 id="库" tabindex="-1"><a class="header-anchor" href="#库" aria-hidden="true">#</a> 库</h3><p>redis共有16个库</p><h4 id="选择数据库" tabindex="-1"><a class="header-anchor" href="#选择数据库" aria-hidden="true">#</a> 选择数据库</h4><p>语法：select 数字</p><h4 id="查看" tabindex="-1"><a class="header-anchor" href="#查看" aria-hidden="true">#</a> 查看</h4><p>查看大小：dbsize</p><p>查看数据库所有的键：keys *</p><h4 id="清空" tabindex="-1"><a class="header-anchor" href="#清空" aria-hidden="true">#</a> 清空</h4><p>清空当前数据库：flushdb</p><p>清空所有：flushall</p><h3 id="基本数据类型" tabindex="-1"><a class="header-anchor" href="#基本数据类型" aria-hidden="true">#</a> 基本数据类型</h3><h4 id="string" tabindex="-1"><a class="header-anchor" href="#string" aria-hidden="true">#</a> String</h4><p>追加字符串，不存在则新建：append key1 &quot;hello&quot;</p><p>获取字符串长度：strlen key1</p><p>初始浏览量为0 ：set views 0</p><p>设置自增1：incr views</p><p>设置自减1：decr views</p><p>可以设置步长。每次的增长值 : INCRBY views 10 #</p><p>获取指定范围的值: GETRANGE key 起始点 结束点</p><p>获取所有长度的值: GETRANGE key 0 -1</p><p>设置多个值:</p><p>mset key value key value ……</p><p>mget key key key</p><p>msetnx 原子性操作设置多个值</p><p><strong>设置过期时间和值:</strong></p><p>设置key3 的值为 he11o,30秒后过期: setex key3 30 &quot;he1lo&quot;</p><p>先get然后在set: getset</p><h2 id="list" tabindex="-1"><a class="header-anchor" href="#list" aria-hidden="true">#</a> List</h2><p>LPuSH key value</p><p>LPUSH list one #将一个值或者多个值，插入到列表头部(左)</p><p>RPUSH key value</p><p>Rpush list righr #将一个值或者多个值，插入到列表位部(右)</p><p>lrange key start end</p><p>LRANGE list 0 1 #通过区间获取具体的值!</p><p>LROR key #移出并获取列表的第一个元素</p><p>lindex list 1 #通过下标获得list 中的某一个值!</p><p>Llen list # 返回列表的长度</p><p>lrem key count value</p><p>lrem list 1 one # 移除list集合中指定个数的value，精确匹配</p><p>ltrim list 1 2 #截取指定的长度!</p><p>lset 将列表中指定下标的值替换为另外一个值，更新操作</p><p>lset list 0 item #如果存在，更新当前下标的值</p><p>在指定元素前后插入指定的值</p><p>LINSERT mylist after world new</p><h2 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> set</h2><p>set集合中添加</p><p>sadd key value</p><p>sadd myset &quot;hello&quot;</p><p>查看指定set的所有值</p><p>smembers key</p><p>SMEMBERS myset</p><p>判断某一个值是不是在set集合中!</p><p>sismember key value</p><p>SISMEMBER myset hello</p><p>查看个数</p><p>scard key</p><p>scard myset</p><p>移除set集合中的指定元素</p><p>srem key value</p><p>srem myset hello</p><p>获取随机</p><p>SRANDMEMBER myset</p><p>SRANDMEMBER myset 2</p><p>smove myset myset2 &quot;kuangshen&quot;# 将一个指定的值，移动到另外一个set集合!</p><p>SDIFF key1 key2 差集</p><p>SINTER key1 key2 交集</p><p>SUNION key1 key2 并集</p><h2 id="hash" tabindex="-1"><a class="header-anchor" href="#hash" aria-hidden="true">#</a> hash</h2><p>hset 集合名 key value</p><p>hset myhash field1 hello</p><h1 id="set一个具体key-vlaue" tabindex="-1"><a class="header-anchor" href="#set一个具体key-vlaue" aria-hidden="true">#</a> set一个具体key-vlaue</h1><p>获取一个字段值</p><p>hget 集合名 key键</p><p>hget myhash field1</p><p>添加多个 key-vlaue</p><p>hmset 集合 key键1 key键2</p><p>hmset myhash field1 hello field2 world</p><p>获取多个字段值</p><p>hmget 集合名 key1 key2</p><p>hmget myhash field1 field2</p><p>获取全部的数据</p><p>hget 集合名</p><p>hgetall myhash</p><p>删除hash指定key字段!对应的value值也就消失了!</p><p>hdel 集合名 key</p><p>hdel myhash field1</p><p>判断hash中指定字段是否存在!</p><p>HEXISTS myhash field1</p><p>只获得所有field</p><p>hkeys 集合名</p><p>hkeys myhash</p><p>只获得所有value</p><p>hvals 集合名</p><p>hvals myhash</p><p>设置自动增长</p><p>HINCRBY myhash field3 1</p><p>HINCRBY myhash field3 -1</p><p>如果不存在则可以设置</p><p>hsetnx myhash field4 hello</p><p>如果存在则不能设置</p><p>hsetnx myhash field4 world</p><h2 id="zset" tabindex="-1"><a class="header-anchor" href="#zset" aria-hidden="true">#</a> zset</h2><p>zset在set的基础上增加了一个值，set k1 v1 zset k1 score1 v1</p><p>添加一个值</p><p>zadd key score value</p><p>zadd myset 1 one</p><p>添加多个值</p><p>zadd myset 2 two 3 three</p><p>获取范围值</p><p>zrange key start end</p><p>zrange myset 0 -1</p><p>显示全部内容从小到大</p><p>ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT offset count]</p><p>移除元素</p><p>zrem key value</p><hr><h2 id="特殊数据类型" tabindex="-1"><a class="header-anchor" href="#特殊数据类型" aria-hidden="true">#</a> 特殊数据类型</h2><h3 id="地理位置geostital" tabindex="-1"><a class="header-anchor" href="#地理位置geostital" aria-hidden="true">#</a> 地理位置geostital</h3><p>创建一个元素</p><p>geoadd key 纬度 经度 成员</p><p>geoadd city 116.40 39.90 beijing</p><p>获取坐标</p><p>geopos city beijing</p><p>获取两者之间的距离</p><p>geodist key value1 value2 单位</p><p>geodist city beijing shanghai km</p><p>相关范围内的城市</p><p>georadius key 纬度 经度 距离 单位 withdist</p><p>找出指定位置内的其他元素</p><p>georadiusbymember key value 距离 单位</p><h3 id="bitmaps" tabindex="-1"><a class="header-anchor" href="#bitmaps" aria-hidden="true">#</a> bitmaps</h3><p>位存储</p><p>统计用户信息，活跃，不活跃!登录、未登录!打卡，365打卡!两个状态的，都可以使用Bitmaps!</p><p>Bitmaps位图，数据结构!都是操作二进制位来进行记录，就只有0和1两个状态!</p><p>365天=365 bit 1字节=8bit46个字节左右!</p><p>设置一个元素</p><p>setbit key offset value</p><p>查看</p><p>getbit sign offset</p><hr><h2 id="事务" tabindex="-1"><a class="header-anchor" href="#事务" aria-hidden="true">#</a> 事务</h2><p>Redis 事务本质:一组命令的集合!一个事务中的所有命令都会被序列化，在事务执行过程的中，会按照顺序执行! 一次性、顺序性、排他性!执行一系列的命令!</p><p>Redis命令保证原子性，但是事务不保证原子性！</p><p>redis事务：</p><p>1 开启事务：开启一个事务</p><blockquote><p>multi</p></blockquote><p>2 命令入队：将命令放入事务</p><blockquote><p>set key value</p></blockquote><p>3 执行事务：执行事务中的命令</p><blockquote><p>exec</p></blockquote><p>4 取消事务:事务中的命令都不会被执行</p><blockquote><p>discard</p></blockquote><p>eg：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 正常执行</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> MULTI 
OK
<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token builtin class-name">set</span> k1 v1
QUEUED
<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token builtin class-name">set</span> k2 <span class="token number">2</span>
QUEUED
<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token builtin class-name">exec</span>
<span class="token number">1</span><span class="token punctuation">)</span> OK
<span class="token number">2</span><span class="token punctuation">)</span> OK

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#取消事务</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> multi
OK
<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token builtin class-name">set</span> k1 v1
QUEUED
<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> DISCARD
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get k1
<span class="token string">&quot;v1&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> multi
OK
<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token builtin class-name">set</span> k3 v3
QUEUED
<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> DISCARD
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get k3
<span class="token punctuation">(</span>nil<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果在入队的命令中有错误的命令，</p><p>如果是编译时异常，那么所有命令都不会被执行。</p><p>如果是运行时异常，那么其他命令正常执行，仅有错误的命令抛出错误信息。</p><hr><h2 id="锁" tabindex="-1"><a class="header-anchor" href="#锁" aria-hidden="true">#</a> 锁</h2><h4 id="悲观锁" tabindex="-1"><a class="header-anchor" href="#悲观锁" aria-hidden="true">#</a> 悲观锁</h4><p>很悲观，什么时候都要加锁。</p><h4 id="乐观锁" tabindex="-1"><a class="header-anchor" href="#乐观锁" aria-hidden="true">#</a> 乐观锁</h4><p>很乐观，认为什么时候都不会出问题，所以不会上锁!更新数据的时候去判断一下，在此期间是否有人修改过这个数据，<br> 获取version<br> 更新的时候比较version</p><p>使用watch命令当作redis的乐观锁操作</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> multi
OK
<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> INCRBY money <span class="token number">10</span>
QUEUED
<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token builtin class-name">exec</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">20</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>unwatch</p></blockquote><p>如果发现事务执行失败，就先解锁</p><hr><h2 id="jedis" tabindex="-1"><a class="header-anchor" href="#jedis" aria-hidden="true">#</a> jedis</h2><p>Jedis是redis的java版本的客户端实现，使用Jedis提供的Java API对Redis进行操作，是Redis官方推崇的方式；并且，使用Jedis提供的对Redis的支持也最为灵活、全面；不足之处，就是编码复杂度较高。</p><h4 id="导入依赖" tabindex="-1"><a class="header-anchor" href="#导入依赖" aria-hidden="true">#</a> 导入依赖</h4><figure><img src="`+p+`" alt="img_84.png" tabindex="0" loading="lazy"><figcaption>img_84.png</figcaption></figure><h4 id="简单语法" tabindex="-1"><a class="header-anchor" href="#简单语法" aria-hidden="true">#</a> 简单语法：</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Jedis</span> jedis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedis</span><span class="token punctuation">(</span> host<span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span>， port<span class="token operator">:</span> <span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;清空数据:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">flushDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;判断某个键是否存在:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;新增&lt;&#39;username&#39;,&#39;haha&#39;&gt;的键值对:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;haha&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;新增&lt;&#39;password&#39;,&#39;mima&#39;&gt;的键值对:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;mima&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;系统中所有的键如下:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> keys <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span> pattern<span class="token operator">:</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;删除键password:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span> key<span class="token operator">:</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;判断键password是否存在:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;查看键username所存储的值的类型:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;随机返回key空间的一个:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">randomKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;重命名key:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">rename</span><span class="token punctuation">(</span> oldkey<span class="token operator">:</span> <span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> newkey<span class="token operator">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;取出改后的name: &quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;按索引查询:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span> index<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;删除当前选择数据库中的所有key:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">flushDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;返回当前数据库中key的数目:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">dbSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;删除所有数据库中的所有key:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">flushAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                   
                   
                      
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;key1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;key2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;key3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;删除键key2:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">del</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;key2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取键key2:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;key2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;修改key1:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;key1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value1Changed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取key1的值:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;key1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;在key3后面加入值:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;key3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;End&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;key3的值:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;key3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
system<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;增加多个键值对:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">mset</span><span class="token punctuation">(</span> <span class="token string">&quot;key01&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value01&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;key02&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;va2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//(keys,values)</span>
system<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取多个键值对:&quot;</span><span class="token operator">+</span>jedis <span class="token punctuation">.</span><span class="token function">mget</span><span class="token punctuation">(</span> <span class="token string">&quot;key01&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;key02&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;key03&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//(...keys: )</span>
                   
                   
jedis<span class="token punctuation">.</span><span class="token function">flushDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//清空数据库</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;===========新增键值对防止覆盖原先值=============&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">setnk</span><span class="token punctuation">(</span><span class="token string">&quot;key1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">setnx</span><span class="token punctuation">(</span><span class="token string">&quot;key2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">setnx</span><span class="token punctuation">(</span><span class="token string">&quot;key2&quot;</span>，<span class="token string">&quot;value2-new&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;key1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;key2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                   
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;===========新增键值对并设置有效时间=============&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print1n</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">setex</span><span class="token punctuation">(</span><span class="token string">&quot;key3&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;value3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//(key,seconds,val)</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print1n</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;key3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                   
<span class="token comment">//清空数据库，setnx(key,value) </span>
jedis<span class="token punctuation">.</span><span class="token function">flushDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print1n</span><span class="token punctuation">(</span><span class="token string">&quot;===========新增键值对防止覆盖原先值=========&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">setnx</span><span class="token punctuation">(</span><span class="token string">&quot;key1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">setnx</span><span class="token punctuation">(</span><span class="token string">&quot;key2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">setnx</span><span class="token punctuation">(</span><span class="token string">&quot;key2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value2-new&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;key1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print1n</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;key2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                   
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;===========新增键值对并设置有效时间:=========&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">setex</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token operator">:</span><span class="token string">&quot;key3&quot;</span>，seconds<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token class-name">Ivalue</span><span class="token operator">:</span> <span class="token string">&quot;value3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;key3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
<span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>timeout<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;key3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token comment">//List集合</span>
jedis<span class="token punctuation">.</span><span class="token function">flushDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//清空数据库</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print1n</span><span class="token punctuation">(</span><span class="token string">&quot;===========添加一个1ist===========&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
jedis<span class="token punctuation">.</span><span class="token function">lpush</span><span class="token punctuation">(</span>key<span class="token operator">:</span><span class="token string">&quot;collections&quot;</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>strings<span class="token operator">:</span><span class="token string">&quot;ArrayList&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Vector&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Stack&quot;</span>，<span class="token string">&quot;HashMap&quot;</span>，<span class="token string">&quot;WeakHashMap&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;List&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
jedis<span class="token punctuation">.</span><span class="token function">lpush</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;collections&quot;</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>strings<span class="token operator">:</span><span class="token string">&quot;Hashset&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
jedis<span class="token punctuation">.</span><span class="token function">lpush</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;collections&quot;</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>strings<span class="token operator">:</span> <span class="token string">&quot;TreeSet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
jedis<span class="token punctuation">.</span><span class="token function">1push</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;collections&quot;</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>strings<span class="token operator">:</span> <span class="token string">&quot;TreeMap&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;collections的内容:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">lrange</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;collections&quot;</span><span class="token punctuation">,</span>start<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>stop<span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//0,-1代表所有</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;collections区间0-3的元素:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">1range</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;collections&quot;</span><span class="token punctuation">,</span> start<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>stop<span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;删除指定元素个数:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">1rem</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;collections&quot;</span><span class="token punctuation">,</span> count<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&quot;HashMap&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print1n</span><span class="token punctuation">(</span><span class="token string">&quot;collections的内容:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">lrange</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;collections&quot;</span><span class="token punctuation">,</span>start<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> stop<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;删除下表0-3区间之外的元素:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">ltrim</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;collections&quot;</span><span class="token punctuation">,</span> start<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> stop<span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print1n</span><span class="token punctuation">(</span><span class="token string">&quot;collections的内容:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">lrange</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;collections&quot;</span><span class="token punctuation">,</span> start<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> stop<span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
system<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;collections列表出栈(左端):&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">lpop</span><span class="token punctuation">(</span> key<span class="token operator">:</span><span class="token string">&quot;collections&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;collections的内容:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">lrange</span><span class="token punctuation">(</span> key<span class="token operator">:</span><span class="token string">&quot;collections&quot;</span><span class="token punctuation">,</span> start<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> stop<span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;collections添加元素，从列表右端，与lpush相对应:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">rpush</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;collections&quot;</span><span class="token punctuation">,</span> value<span class="token operator">:</span><span class="token string">&quot;list1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;collections的内容:“+jedis.1range( key: &quot;</span>collections&quot;<span class="token punctuation">,</span>start<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> stop<span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print1n</span><span class="token punctuation">(</span><span class="token string">&quot;collections列表出栈(右端):&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">rpop</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;collections&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;collections的内容:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">lrange</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;collections&quot;</span><span class="token punctuation">,</span>start<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> stop<span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;修改collections指定下标1的内容:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">lset</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;collections&quot;</span><span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> value<span class="token operator">:</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print1n</span><span class="token punctuation">(</span><span class="token string">&quot;collections的内容:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">lrange</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;collections&quot;</span><span class="token punctuation">,</span> start<span class="token operator">:</span> e<span class="token punctuation">,</span> stop<span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print1n</span><span class="token punctuation">(</span><span class="token string">&quot;===================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;collections的长度:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">llen</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;collections&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print1n</span><span class="token punctuation">(</span><span class="token string">&quot;获取collections下标为2的元素:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">lindex</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;collections&quot;</span><span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;===================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
jedis<span class="token punctuation">.</span><span class="token function">lpush</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;sortedList&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>strings<span class="token operator">:</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;6&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;7&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sortedList排序前:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">lrange</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;sortedList&quot;</span><span class="token punctuation">,</span> start<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> stop<span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;sortedList&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                   

<span class="token comment">//set集合</span>
jedis<span class="token punctuation">.</span><span class="token function">flushDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//清空数据库</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;============向集合中添加元素(不重复)============&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">sadd</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;eleSet&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>members<span class="token operator">:</span> <span class="token string">&quot;e1&quot;</span> <span class="token punctuation">,</span><span class="token string">&quot;e2&quot;</span> <span class="token punctuation">,</span><span class="token string">&quot;e4&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e8&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e7&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print1n</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">sadd</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;eleSet&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>members<span class="token operator">:</span> <span class="token string">&quot;e6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">sadd</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;eleset&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>members<span class="token operator">:</span> <span class="token string">&quot;e6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;eleSet的所有元素为:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">smembers</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;eleSet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;删除一个元素e0:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">srem</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token string">&quot;eleSet&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>members<span class="token operator">:</span> <span class="token string">&quot;e0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;eleSet的所有元素为:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">smembers</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;eleSet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;删除两个元素e7和e6:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">srem</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;eleset&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>members<span class="token operator">:</span> <span class="token string">&quot;e7&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;eleSet的所有元素为:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">smembers</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;eleSet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;随机的移除集合中的一个元素:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">spop</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;eleSet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;随机的移除集合中的一个元素:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">spop</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;eleset&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;eleSet的所有元素为:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">smembers</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;eleSet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;eleSet中包含元素的个数:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">scard</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;eleset&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;e3是否在eleset中:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">sismember</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;eleset&quot;</span><span class="token punctuation">,</span> member<span class="token operator">:</span> <span class="token string">&quot;e3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;e1是否在eleSet中:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">sismember</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;eleSet&quot;</span><span class="token punctuation">,</span> member<span class="token operator">:</span> <span class="token string">&quot;e1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;e1是否在eleSet中:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">sismember</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;eleset&quot;</span><span class="token punctuation">,</span> member<span class="token operator">:</span> <span class="token string">&quot;e5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">sadd</span><span class="token punctuation">(</span>key<span class="token operator">:</span><span class="token string">&quot;eleSet1&quot;</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>members<span class="token operator">:</span><span class="token string">&quot;e1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e4&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e8&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e7&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">sadd</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;eleSet2&quot;</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>members<span class="token operator">:</span> <span class="token string">&quot;e1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e4&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;将eleSet1中删除e1并存入eleSet3中:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">smove</span><span class="token punctuation">(</span> srckey<span class="token operator">:</span> <span class="token string">&quot;eleSet1&quot;</span><span class="token punctuation">,</span> dstkey<span class="token operator">:</span> <span class="token string">&quot;eleSet3&quot;</span><span class="token punctuation">,</span>dstvalue<span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;将eleSet1中删除e2并存入eleSet3中:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">smove</span><span class="token punctuation">(</span> srckey<span class="token operator">:</span> <span class="token string">&quot;eleSet1&quot;</span>， dstkey<span class="token operator">:</span> <span class="token string">&quot;eleSet3&quot;</span><span class="token punctuation">,</span>dstvalue<span class="token operator">:</span><span class="token string">&quot;val&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;eleSet1中的元素:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">smembers</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;eleSet1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;eleSet3中的元素:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span> smembers <span class="token punctuation">(</span> key<span class="token operator">:</span><span class="token string">&quot;eleSet3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print1n</span><span class="token punctuation">(</span><span class="token string">&quot;============集合运算=================&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;eleSet1中的元素:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span>smembers <span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;eleSet1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;eleSet2中的元素:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">smembers</span><span class="token punctuation">(</span> key<span class="token operator">:</span><span class="token string">&quot;eleSet2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                   
                   
<span class="token comment">//hashMap</span>
jedis<span class="token punctuation">.</span><span class="token function">flushDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key4&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;value4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//添加名称为hash (key)的hash元素</span>
jedis<span class="token punctuation">.</span><span class="token function">hmset</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//向名称为hash的hash中添加key为key5，value为value5元素</span>
jedis<span class="token punctuation">.</span><span class="token function">hset</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;hash&quot;</span>， field<span class="token operator">:</span> <span class="token string">&quot;key5&quot;</span>， value<span class="token operator">:</span> <span class="token string">&quot;value5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;散列hash的所有键值对为:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">hgetA1l</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;散列hash的所有键为:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">hkeys</span><span class="token punctuation">(</span><span class="token string">&quot;hash&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;散列hash的所有值为:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">hvals</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;将key6保存的值加上一个整数，如果key6不存在则添加key6:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span>r
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;散列hash的所有键值对为:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">hgetAl1</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>&quot;将key6保存的值加上一个整数，如果key6不存在则添加key6<span class="token operator">:</span>“<span class="token operator">+</span>jedis<span class="token punctuation">.</span>r
system<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;散列hash的所有键值对为:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">hgetAl1</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;删除一个或者多个键值对:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">hdel</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>fields<span class="token operator">:</span> <span class="token string">&quot;key2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;散列hash的所有键值对为:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">hgetA11</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;散列hash中键值对的个数:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">hlen</span><span class="token punctuation">(</span> key<span class="token operator">:</span><span class="token string">&quot;hash&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;判断hash中是否存在key2:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">hexists</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span>field<span class="token operator">:</span> <span class="token string">&quot;key2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;判断hash中是否存在key3:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">hexists</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> field<span class="token operator">:</span> <span class="token string">&quot;key3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取hash中的值:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">hmget</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>fields<span class="token operator">:</span> <span class="token string">&quot;key3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取hash中的值:&quot;</span><span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">hmget</span><span class="token punctuation">(</span> key<span class="token operator">:</span> <span class="token string">&quot;hash&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>fields<span class="token operator">:</span> <span class="token string">&quot;key3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;key4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                                            
                                            
<span class="token comment">//事务</span>
jedis<span class="token punctuation">.</span><span class="token function">flushDB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">|</span>
<span class="token class-name">JSONObject</span> json0bject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
json0bject<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
json0bject<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;kuangshen&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 开启事务</span>
<span class="token class-name">Transaction</span> multi <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">multi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> result<span class="token operator">=</span> json0bject<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span><span class="token punctuation">{</span>
multi<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;user1&quot;</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
multi<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;user2&quot;</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>代码抛出异常事务，执行失败<span class="token operator">!</span>
<span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
                   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="springboot整合" tabindex="-1"><a class="header-anchor" href="#springboot整合" aria-hidden="true">#</a> SpringBoot整合</h2><figure><img src="`+o+`" alt="img_83.png" tabindex="0" loading="lazy"><figcaption>img_83.png</figcaption></figure><p><strong>修改配置文件：</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment">#redis的配置信息</span>
spring.data.redis.host=192.168.80.128
spring.data.redis.port=6379
<span class="token comment">#最多获取数</span>
spring.data.redis.lettuce.pool.max<span class="token punctuation">-</span>active=8
spring.data.redis.lettuce.pool.max<span class="token punctuation">-</span>wait=<span class="token punctuation">-</span>1ms
spring.data.redis.lettuce.pool.max<span class="token punctuation">-</span>idle=8
spring.data.redis.lettuce.pool.min<span class="token punctuation">-</span>idle=0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>测试：</strong></p><p>redisTemplate 操作不同的数据类型，api和我们的指令是一样的<br> opsForValue 操作字符串 类似String<br> opsForList 操作List 类似List<br> opsForSet<br> opsForHash<br> opsForzset<br> opsForGeo<br> opsForHyperLogLog</p><p>除了基本的操作，我们常用的方法都可以直接通过redisTemplate操作，比如事务，和基本的CRUD</p><h4 id="获取redis的连接对象" tabindex="-1"><a class="header-anchor" href="#获取redis的连接对象" aria-hidden="true">#</a> 获取redis的连接对象</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Autowired</span>
<span class="token keyword">private</span> <span class="token class-name">RedisTemplateredisTemplate</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">redis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">RedisConnection</span> connection <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">getConnectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	connection<span class="token punctuation">.</span><span class="token function">fLushDb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	connection<span class="token punctuation">.</span><span class="token function">flushAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;mykey&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;redis111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;mykey&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置自己的序列化方式" tabindex="-1"><a class="header-anchor" href="#配置自己的序列化方式" aria-hidden="true">#</a> 配置自己的序列化方式</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisConfig</span> <span class="token punctuation">{</span>

<span class="token comment">// 自己定义了一个RedisTemplate</span>
<span class="token annotation punctuation">@Bean</span>
<span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;al1&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> object<span class="token punctuation">&gt;</span></span> <span class="token function">redisTemplate</span><span class="token punctuation">(</span><span class="token class-name">RedisConnectionFactory</span> factory<span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">// 我们为了自己开发方便，一般直接使用&lt;String,Object&gt;</span>
<span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> template <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span>0bject<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
template<span class="token punctuation">.</span><span class="token function">setConnectionFactory</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Json序列化配置</span>
<span class="token class-name">Jackson2JsonRedisSerializer</span> jackson2JsonRedisSerializer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jackson2JsonRedisSerializer</span><span class="token punctuation">(</span><span class="token number">0</span>bject<span class="token punctuation">.</span>cl
<span class="token class-name">ObjectMapper</span> om <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">0bjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
om<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span><span class="token class-name">PropertyAccessor</span><span class="token punctuation">.</span><span class="token constant">ALL</span>，<span class="token class-name">JsonAutoDetect<span class="token punctuation">.</span>Visibility</span><span class="token punctuation">.</span><span class="token constant">ANY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
om<span class="token punctuation">.</span><span class="token function">enableDefaultTyping</span><span class="token punctuation">(</span><span class="token number">0</span>bjectMapper<span class="token punctuation">.</span>DefaultTyping<span class="token punctuation">.</span><span class="token constant">NON_FINAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
jackson2JsonRedisSerializer<span class="token punctuation">.</span><span class="token function">set0bjectMapper</span><span class="token punctuation">(</span>om<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// String 的序列化 </span>
<span class="token class-name">StringRedisSerializer</span> stringRedisSerializer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// key采用string的序列化方式</span>
template<span class="token punctuation">.</span><span class="token function">setKeySerializer</span><span class="token punctuation">(</span>stringRedisSerializer<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// hash的key也采用string的序列化方式</span>
template<span class="token punctuation">.</span><span class="token function">setHashKeySerializer</span><span class="token punctuation">(</span>stringRedisSerializer<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// value序列化方式采用jackson</span>
template<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span>jackson2JsonRedisSerializer<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// hash的value序列化方式采用jackson</span>
template<span class="token punctuation">.</span><span class="token function">setHashValueSerializer</span><span class="token punctuation">(</span>jackson2JsonRedisSerializer<span class="token punctuation">)</span><span class="token punctuation">;</span>
template<span class="token punctuation">.</span><span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> template<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token punctuation">}</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="redis配置文件" tabindex="-1"><a class="header-anchor" href="#redis配置文件" aria-hidden="true">#</a> Redis配置文件</h2><p>redis里的单位配置，忽略大小写。</p><blockquote><p><strong>导入其他配置文件：</strong></p></blockquote><h1 id="include-path-to-local-conf" tabindex="-1"><a class="header-anchor" href="#include-path-to-local-conf" aria-hidden="true">#</a> include /path/to/local.conf</h1><h1 id="include-path-to-other-conf" tabindex="-1"><a class="header-anchor" href="#include-path-to-other-conf" aria-hidden="true">#</a> include /path/to/other.conf</h1><blockquote><p>网络</p></blockquote><p>bind 127.0.0.1 #绑定的ip</p><p>protected-mode yes #保护模式<br> port 6379 #端口设置</p><blockquote><p>通用 general</p></blockquote><p>daemonize yes #以守护进程的方式运行，默认是no，我们需要自己开启为yes!</p><p>pidfile /var/run/redis_6379.pid #如果以后台的方式运行，我们就需要指定一个pid 文件!</p><p>#日志</p><p>#specify the server verbosity level.</p><p>#This can be one of:</p><p>#debug (a lot of information, useful for development/testing)</p><p>#verbose (many rarely useful info, but not a mess like the debug level)</p><p>#notice (moderately verbose, what you want in production probably) #生产环境</p><p>#warning (only very important / critical messages are 1ogged)</p><p>loglevel notice</p><p>logfile,&quot;&quot; #日志的文件位置名</p><p>databases 16 #数据库的数量，默认是16个数据库</p><p>always-show-logo yes #是否总是显示LOGO</p><h2 id="持久化" tabindex="-1"><a class="header-anchor" href="#持久化" aria-hidden="true">#</a> 持久化</h2><p>持久化，在规定的时间内，执行了多少次操作，则会持久化到文件.rdb.aof<br> redis是内存数据库，如果没有持久化，那么数据断电及失!</p><blockquote><p>RDB配置：</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
<span class="token comment">#如果900s内，如果至少有一个1key进行了修改，我们及进行持久化操作</span>

save <span class="token number">900</span> <span class="token number">1</span>

<span class="token comment">#如果300s内，如果至少10key进行了修改，我们及进行持久化操作</span>

save <span class="token number">300</span> <span class="token number">10</span>

<span class="token comment">#如果60s内,如果至少10000 key进行了修改，我们及进行持久化操作</span>

save <span class="token number">60</span> <span class="token number">10000</span>

<span class="token comment">#我们之后学习持久化，会自己定义这个测试!</span>

stop-writes-on-bgsave-error <span class="token function">yes</span>

<span class="token comment">#持久化如果出错，是否还需要继续工作!</span>

rdbcompression <span class="token function">yes</span>  <span class="token comment">#是否压缩rdb 文件，需要消耗一些cpu资源!</span>

rdbchecksum <span class="token function">yes</span>  <span class="token comment">#保存rdb文件的时候，进行错误的检查校验!</span>

<span class="token function">dir</span> ./   <span class="token comment">#rdb 文件保存的目录!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>设置密码</strong></p></blockquote><p>获取当前的密码：config get requirepass</p><p>设置redis的密码：config set requirepass &quot;123456&quot;</p><p>使用密码进行登录: auth 123456</p><blockquote><p>客户端</p></blockquote><p>设置能连接上redis的最大客户端的数量 : maxclients 10000</p><p>redis 配置最大的内存容量: maxmemory (bytes)</p><p>maxmemory-policy noeviction #内存到达上限之后的处理策略</p><p>1、volatile-lru:只对设置了过期时间的key进行LRU(默认值)<br> 2、al1keys-lru:删除1ru算法的key<br> 3、volatile-random:随机删除即将过期key<br> 4、a11keys-random:随机删除<br> 5、volatile-ttl:删除即将过期的<br> 6、noeviction :永不过期，返回错误</p><blockquote><p>触发机制</p></blockquote><p>1、save的规则满足的情况下，会自动触发rdb规则<br> 2、执行 flushall命令，也会触发我们的rdb规则!<br> 3、退出redis，也会产生rdb文件!<br> 备份就自动生成一个dump</p><blockquote><p>如何恢复rdb文件</p></blockquote><p>1、只需要将rdb文件放在我们redis启动目录就可以，redis启动的时候会自动检查dump.rdb恢复其中的内容<br> 2、查看需要存在的位置</p><p>config get dir</p><p>1)&quot;dir&quot;<br> 2)&quot;/usr/local/bin&quot; # 如果在这个目录下存在dump.rdb 文件，启动就会自动恢复其中的数据</p><p>优点:<br> 1、适合大规模的数据恢复!<br> 2、对数据的完整性要不高!<br> 缺点:<br> 1、需要一定的时间间隔进程操作!如果redis意外宕机了，这个最后一次修改数据就没有的了<br> 2、fork进程的时候，会占用一定的内容空间!!</p><blockquote><p>AOF配置</p></blockquote><p>appendonly no #默认是不开启aof模式的，默认是使用rdb方式持久化的，在大部分所有的情况下，rdb完全够用!</p><p>appendfilename &quot;appendonly.aof&quot; #持久化的文件的名字</p><p>appendfsync always #每次修改都会 sync。消耗性能<br> appendfsync everysec #每秒执行一次sync，可能会丢失这1s的数据!</p><p>appendfsync no #不执行 sync，这个时候操作系统自己同步数据，速度最快!</p><blockquote><p>搜索配置文件内容：</p></blockquote><p>vim 文件</p><p>:/搜索内容 n下一个</p><p>如果这个 aof 文件有错误，这时候redis 是启动不起来的吗，我们需要修复这个aof文件redis 给我们提供了一个工具 redis-check-aof --fix</p><h3 id="消息订阅" tabindex="-1"><a class="header-anchor" href="#消息订阅" aria-hidden="true">#</a> 消息订阅</h3><p>关注消息后，消息发出者可以发出订阅者都收到的消息。</p><blockquote><p>发送端：</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> PUBLISH hello nihao
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> PUBLISH hello haha
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>接收端</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> SUBSCRIBE hello
Reading messages<span class="token punctuation">..</span>. <span class="token punctuation">(</span>press Ctrl-C to quit<span class="token punctuation">)</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;subscribe&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;hello&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;message&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;hello&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;nihao&quot;</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;message&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;hello&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;haha&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redis主从复制" tabindex="-1"><a class="header-anchor" href="#redis主从复制" aria-hidden="true">#</a> redis主从复制</h2><p>主从复制，读写分离!80%的情况下都是在进行读操作!减缓服务器的压力!架构中经常使用!一主二从!</p><p>主从复制，是指将一台Redis服务器的数据，复制到其他的Redis服务器。前者称为主节点(master/leader)，后者称为从节点(slave/follower);数据的复制是单向的，只能由主节点到从节点。Master以写为主，Slave以读为主。</p><p>注意：只配从库不配主库</p><p>查看当前库的信息： info replication</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> info replication
<span class="token comment"># Replication</span>
role:master <span class="token comment">#角色</span>
connected_slaves:0  <span class="token comment">#从机数量</span>
master_failover_state:no-failover
master_replid:91336488202d1d08d9ddc463852f4c40d2950b7c
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:0
second_repl_offset:-1
repl_backlog_active:0
repl_backlog_size:1048576
repl_backlog_first_byte_offset:0
repl_backlog_histlen:0

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以测试：</p><p>复制3个配置文件，然后修改对应的信息<br> 1、端口<br> 2、pid 名字<br> 3、log文件名字<br> 4、dump.rdb 名字</p><p>默认情况下，每台Redis服务器都是主节点</p><p>配置从节点，认老大：</p><blockquote><p>Slaveof host port</p></blockquote><p>真实的从主配置应该在配置文件中配置，这样的话是永久的，我们这里使用的是命令，暂时的!</p><p>主机负责写，从机负责读</p><p>Slave 启动成功连接到master后会发送一个sync同步命令</p><p>Master 接到命令，启动后台的存盘进程，同时收集所有接收到的用于修改数据集命令，在后台进程执行完毕之后，master将传送</p><p>整个数据文件到slave，并完成一次完全同步。</p><p>全量复制:而slave服务在接收到数据库文件数据后，将其存盘并加载到内存中。</p><p>增量复制:Master继续将新的所有收集到的修改命令依次传给slave，完成同步</p><p>但是只要是重新连接master，一次完全同步(全量复制)将被自动执行</p>`,289),u=[c];function l(i,k){return s(),a("div",null,u)}const m=n(e,[["render",l],["__file","redis.html.vue"]]);export{m as default};
