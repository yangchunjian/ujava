const t=JSON.parse('{"key":"v-68013315","path":"/principle/first.html","title":"结构化抽象","lang":"zh-CN","frontmatter":{"title":"结构化抽象","icon":"laptop-code","category":["设计原理"],"description":"软件设计的第一性原理，是结构化抽象。术生于道，技术生于原理。 简介 所谓的第一性原理，就是无论使用什么方法论，都无法绕过的那最最基础的部分。无论是 DDD 设计，还是面向模式的架构设计，或 微服务架构，均建基于结构化抽象。 何为结构化抽象 ？ 先回答 “何为抽象” 与 “何为结构化” 两个问题。 何为抽象 ？ “设计原理:抽象” 一文阐述了什么是抽象及在编程与计算中的意义； “设计原理:代码抽象与分层” 则列举了从代码中提炼出来的六类抽象，涵盖了编程开发中常见的实体及处理。","head":[["meta",{"property":"og:url","content":"https://ujava.cn/principle/first.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"结构化抽象"}],["meta",{"property":"og:description","content":"软件设计的第一性原理，是结构化抽象。术生于道，技术生于原理。 简介 所谓的第一性原理，就是无论使用什么方法论，都无法绕过的那最最基础的部分。无论是 DDD 设计，还是面向模式的架构设计，或 微服务架构，均建基于结构化抽象。 何为结构化抽象 ？ 先回答 “何为抽象” 与 “何为结构化” 两个问题。 何为抽象 ？ “设计原理:抽象” 一文阐述了什么是抽象及在编程与计算中的意义； “设计原理:代码抽象与分层” 则列举了从代码中提炼出来的六类抽象，涵盖了编程开发中常见的实体及处理。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-15T03:25:51.000Z"}],["meta",{"property":"article:author","content":"UJava"}],["meta",{"property":"article:modified_time","content":"2024-04-15T03:25:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"结构化抽象\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-15T03:25:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"UJava\\",\\"url\\":\\"https://ujava.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"理念","slug":"理念","link":"#理念","children":[]},{"level":2,"title":"实践","slug":"实践","link":"#实践","children":[]},{"level":2,"title":"经验与洞见","slug":"经验与洞见","link":"#经验与洞见","children":[]}],"git":{"createdTime":1698750645000,"updatedTime":1713151551000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":6}]},"readingTime":{"minutes":15.9,"words":4771},"filePathRelative":"principle/first.md","localizedDate":"2023年10月31日","excerpt":"<blockquote>\\n<p>软件设计的第一性原理，是结构化抽象。术生于道，技术生于原理。</p>\\n</blockquote>\\n<h1> 简介</h1>\\n<p>所谓的第一性原理，就是无论使用什么方法论，都无法绕过的那最最基础的部分。无论是 DDD 设计，还是面向模式的架构设计，或<br>\\n微服务架构，均建基于结构化抽象。</p>\\n<p>何为结构化抽象 ？ 先回答 “何为抽象” 与 “何为结构化” 两个问题。</p>\\n<p>何为抽象 ？ “<a href=\\"/principle/second.html\\" target=\\"blank\\">设计原理:抽象</a>” 一文阐述了什么是抽象及在编程与计算中的意义； “<a href=\\"/principle/third.html\\" target=\\"blank\\">设计原理:代码抽象与分层</a>”<br>\\n则列举了从代码中提炼出来的六类抽象，涵盖了编程开发中常见的实体及处理。</p>","copyright":{"author":"UJava(ujava.cn)","license":"MIT"},"autoDesc":true}');export{t as data};
