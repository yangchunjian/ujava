const e=JSON.parse('{"key":"v-6ad87c6f","path":"/highfreq/summary.html","title":"概要设计和详细设计","lang":"zh-CN","frontmatter":{"title":"概要设计和详细设计","icon":"laptop-code","category":["设计高频"],"tag":["高频"],"description":"概要设计和详细设计 在软件设计中，大家经常问到的一个问题是：概要设计应该怎样一个概要法，详细设计应该怎样一个详细法？ 一般公司的研发流程是瀑布型的，这个模型中的分析、设计阶段是基于经典的结构化方法。 结构化设计方法的基本思路是：按照问题域，将软件逐级细化，分解为不必再分解的的模块，每个模块完成一定的功能，为一个或多个父模块服务（即接受调用），也接受一个或多个子模块的服务（即调用子模块）。模块的概念，和编程语言中的子程序或函数是对应的。 这样一来，设计可以明显地划分成两个阶段： 概要（结构）设计阶段：把软件按照一定的原则分解为模块层次，赋予每个模块一定的任务，并确定模块间调用关系和接口。 详细设计阶段：依据概要设计阶段的分解，设计每个模块内的算法、流程等。","head":[["meta",{"property":"og:url","content":"https://ujava.cn/highfreq/summary.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"概要设计和详细设计"}],["meta",{"property":"og:description","content":"概要设计和详细设计 在软件设计中，大家经常问到的一个问题是：概要设计应该怎样一个概要法，详细设计应该怎样一个详细法？ 一般公司的研发流程是瀑布型的，这个模型中的分析、设计阶段是基于经典的结构化方法。 结构化设计方法的基本思路是：按照问题域，将软件逐级细化，分解为不必再分解的的模块，每个模块完成一定的功能，为一个或多个父模块服务（即接受调用），也接受一个或多个子模块的服务（即调用子模块）。模块的概念，和编程语言中的子程序或函数是对应的。 这样一来，设计可以明显地划分成两个阶段： 概要（结构）设计阶段：把软件按照一定的原则分解为模块层次，赋予每个模块一定的任务，并确定模块间调用关系和接口。 详细设计阶段：依据概要设计阶段的分解，设计每个模块内的算法、流程等。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-01T03:13:51.000Z"}],["meta",{"property":"article:author","content":"ujava"}],["meta",{"property":"article:tag","content":"高频"}],["meta",{"property":"article:modified_time","content":"2024-03-01T03:13:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"概要设计和详细设计\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-01T03:13:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ujava\\",\\"url\\":\\"https://ujava.cn\\"}]}"]]},"headers":[{"level":2,"title":"概要设计和详细设计","slug":"概要设计和详细设计","link":"#概要设计和详细设计","children":[]},{"level":2,"title":"一、概要设计阶段","slug":"一、概要设计阶段","link":"#一、概要设计阶段","children":[]},{"level":2,"title":"二、详细设计阶段","slug":"二、详细设计阶段","link":"#二、详细设计阶段","children":[]},{"level":2,"title":"三、概要设计和详细设计的区别与联系","slug":"三、概要设计和详细设计的区别与联系","link":"#三、概要设计和详细设计的区别与联系","children":[]},{"level":2,"title":"四、软件设计的过程","slug":"四、软件设计的过程","link":"#四、软件设计的过程","children":[]},{"level":2,"title":"五、软件设计的基础","slug":"五、软件设计的基础","link":"#五、软件设计的基础","children":[]},{"level":2,"title":"六、概要设计说明书：","slug":"六、概要设计说明书","link":"#六、概要设计说明书","children":[]},{"level":2,"title":"详细设计说明书","slug":"详细设计说明书","link":"#详细设计说明书","children":[]}],"git":{"createdTime":1700040207000,"updatedTime":1709262831000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":3}]},"readingTime":{"minutes":9.8,"words":2939},"filePathRelative":"highfreq/summary.md","localizedDate":"2023年11月15日","excerpt":"<h2> 概要设计和详细设计</h2>\\n<p>在软件设计中，大家经常问到的一个问题是：概要设计应该怎样一个概要法，详细设计应该怎样一个详细法？</p>\\n<p>一般公司的研发流程是瀑布型的，这个模型中的分析、设计阶段是基于经典的结构化方法。<br>\\n结构化设计方法的基本思路是：按照问题域，将软件逐级细化，分解为不必再分解的的模块，每个模块完成一定的功能，为一个或多个父模块服务（即接受调用），也接受一个或多个子模块的服务（即调用子模块）。模块的概念，和编程语言中的子程序或函数是对应的。</p>\\n<p>这样一来，设计可以明显地划分成两个阶段：</p>\\n<ul>\\n<li>概要（结构）设计阶段：把软件按照一定的原则分解为模块层次，赋予每个模块一定的任务，并确定模块间调用关系和接口。</li>\\n<li>详细设计阶段：依据概要设计阶段的分解，设计每个模块内的算法、流程等。</li>\\n</ul>","copyright":{"author":"UJava(ujava.cn)","license":"MIT"},"autoDesc":true}');export{e as data};
