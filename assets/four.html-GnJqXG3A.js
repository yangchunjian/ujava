const e=JSON.parse('{"key":"v-45ae5707","path":"/principle/four.html","title":"设计原理:编程概要","lang":"zh-CN","frontmatter":{"title":"设计原理:编程概要","icon":"laptop-code","category":["设计原理"],"description":"简介 0与1 在可预见的很长一段时间，计算世界仍然是由 0 和 1 组成的。 无论是字母、数字、图表、网页、动画、超酷炫的特效等，在计算底层看来，都是流畅的一系列01数字串，就像硬件只会看到一团极其壮丽的电子流一样。我们的旅程从这里出发。 原子数据 计算世界的原子数据通常包括字符、整数、字符串、布尔量、浮点数。 打开某种编程语言的入门书籍，第二章通常都会是变量，以及变量的若干基本类型。 字符 最先映入眼帘的，大概就是字母表。大小写的 ABCDEFG, HIJKLMN,OPQRST,UVWXYZ。 咋看上去，似乎没有什么结构，都是单个的字母。实际上，在计算机内部，任何字母都是一个字节8位的01串编码而成的，通过ASCII 码表来进行映射。比如A，ASCII码值是65，对应的01串是 01000001。 单个数字以及其他控制字符，也是通过 ASCII 码表来标识的。可以百度或谷歌 ASCII 了解详情。由此认识到： 字符是 8 位01串。后面会知道，这里的“串”可以理解为一种“数组”。","head":[["meta",{"property":"og:url","content":"https://ujava.cn/ujava/principle/four.html"}],["meta",{"property":"og:site_name","content":"UJava"}],["meta",{"property":"og:title","content":"设计原理:编程概要"}],["meta",{"property":"og:description","content":"简介 0与1 在可预见的很长一段时间，计算世界仍然是由 0 和 1 组成的。 无论是字母、数字、图表、网页、动画、超酷炫的特效等，在计算底层看来，都是流畅的一系列01数字串，就像硬件只会看到一团极其壮丽的电子流一样。我们的旅程从这里出发。 原子数据 计算世界的原子数据通常包括字符、整数、字符串、布尔量、浮点数。 打开某种编程语言的入门书籍，第二章通常都会是变量，以及变量的若干基本类型。 字符 最先映入眼帘的，大概就是字母表。大小写的 ABCDEFG, HIJKLMN,OPQRST,UVWXYZ。 咋看上去，似乎没有什么结构，都是单个的字母。实际上，在计算机内部，任何字母都是一个字节8位的01串编码而成的，通过ASCII 码表来进行映射。比如A，ASCII码值是65，对应的01串是 01000001。 单个数字以及其他控制字符，也是通过 ASCII 码表来标识的。可以百度或谷歌 ASCII 了解详情。由此认识到： 字符是 8 位01串。后面会知道，这里的“串”可以理解为一种“数组”。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-03T03:00:03.000Z"}],["meta",{"property":"article:author","content":"UJava"}],["meta",{"property":"article:modified_time","content":"2024-03-03T03:00:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设计原理:编程概要\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-03T03:00:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"UJava\\",\\"url\\":\\"https://ujava.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"原子控制","slug":"原子控制","link":"#原子控制","children":[]},{"level":2,"title":"数据与控制","slug":"数据与控制","link":"#数据与控制","children":[]},{"level":2,"title":"编码","slug":"编码","link":"#编码","children":[]},{"level":2,"title":"第一站-初识结构","slug":"第一站-初识结构","link":"#第一站-初识结构","children":[]},{"level":2,"title":"基本数据结构","slug":"基本数据结构","link":"#基本数据结构","children":[]},{"level":2,"title":"基本控制结构","slug":"基本控制结构","link":"#基本控制结构","children":[]},{"level":2,"title":"第二站-中级结构","slug":"第二站-中级结构","link":"#第二站-中级结构","children":[]},{"level":2,"title":"中级控制结构","slug":"中级控制结构","link":"#中级控制结构","children":[]},{"level":2,"title":"第三站-高级结构","slug":"第三站-高级结构","link":"#第三站-高级结构","children":[]},{"level":2,"title":"第四站-应用","slug":"第四站-应用","link":"#第四站-应用","children":[]},{"level":2,"title":"软件之道的思考","slug":"软件之道的思考","link":"#软件之道的思考","children":[]}],"git":{"createdTime":1698750645000,"updatedTime":1709434803000,"contributors":[{"name":"yangchunjian","email":"1091938307@qq.com","commits":4}]},"readingTime":{"minutes":57.86,"words":17359},"filePathRelative":"principle/four.md","localizedDate":"2023年10月31日","excerpt":"<h2> 简介</h2>\\n<h4> 0与1</h4>\\n<p>在可预见的很长一段时间，计算世界仍然是由 0 和 1 组成的。 无论是字母、数字、图表、网页、动画、超酷炫的特效等，在计算底层看来，都是流畅的一系列01数字串，就像硬件只会看到一团极其壮丽的电子流一样。我们的旅程从这里出发。</p>\\n<h4> 原子数据</h4>\\n<p>计算世界的原子数据通常包括字符、整数、字符串、布尔量、浮点数。 打开某种编程语言的入门书籍，第二章通常都会是变量，以及变量的若干基本类型。</p>\\n<h4> 字符</h4>\\n<p>最先映入眼帘的，大概就是字母表。大小写的 ABCDEFG, HIJKLMN,OPQRST,UVWXYZ。 咋看上去，似乎没有什么结构，都是单个的字母。实际上，在计算机内部，任何字母都是一个字节8位的01串编码而成的，通过ASCII 码表来进行映射。比如A，ASCII码值是65，对应的01串是 01000001。 单个数字以及其他控制字符，也是通过 ASCII 码表来标识的。可以百度或谷歌 ASCII 了解详情。由此认识到： 字符是 8 位01串。后面会知道，这里的“串”可以理解为一种“数组”。</p>","copyright":{"author":"UJava(ujava.cn)","license":"MIT"},"autoDesc":true}');export{e as data};
